Index: app/src/main/java/com/example/mumulcom/QuestionRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mumulcom\r\n\r\nimport retrofit2.Call\r\nimport retrofit2.http.*\r\n\r\n// 질문정보를 서버에서 받아올때 이용\r\ninterface QuestionRetrofitInterface {\r\n    @GET(\"/questions/latest/{userIdx}\") // 최근 질문 조회 (HomeFragment)\r\n    fun getQuestions(\r\n        @Path(\"userIdx\") userIdx : Long,\r\n        @Header(\"X-ACCESS-TOKEN\") X_ACCESS_TOKEN : String\r\n    ): Call<QuestionResponse>\r\n\r\n    @GET(\"/questions?\")  // 카테고리별 질문 조회 (QuestionBoardActivity)\r\n    fun getCategoryQuestions(\r\n        @Query(\"type\") type:Int,   // 질문 유형 (코딩 질문: 1 / 개념 질문 : 2)\r\n        @Query(\"sort\") sort:Int, // 정렬 기준 (최신순 : 1/ 핫한순 : 2)\r\n        @Query(\"bigCategoryIdx\") bigCategoryIdx:Int, // (ex.1) -> 필수\r\n        @Query(\"smallCategoryIdx\") smallCategoryIdx:Int?, // (ex.1) -> 필수 아님\r\n        @Query(\"isReplied\") isReplied:Boolean, // (답변 달린 질문만 보기 (true) / 전체 질문 보기 (false)\r\n        @Query(\"lastQuestionIdx\") lastQuestionIdx:Int, // (ex. 1)  마지막으로 조회한 질문글 순서 번호\r\n        @Query(\"perPage\") perPage:Int, // 하나의 페이지당 조회할 질문 글 갯수\r\n    ):Call<CategoryQuestionResponse>\r\n\r\n    @GET(\"/questions/coding/{questionIdx}/{userIdx}\") // 코딩 질문 상세 조회 (api 10)\r\n    fun getDetailCodingQuestion(\r\n        @Path(\"questionIdx\") questionIdx : Long,\r\n        @Path(\"userIdx\") userIdx : Long\r\n\r\n    ):Call<DetailCodingQuestionResponse>\r\n\r\n    @GET(\"/questions/concept/{questionIdx}/{userIdx}\") // 개념 질문 상세 조회 (api 11)\r\n    fun getDetailConceptQuestion(\r\n        @Path(\"questionIdx\") questionIdx : Long,\r\n        @Path(\"userIdx\") userIdx : Long\r\n\r\n    ):Call<DetailConceptQuestionResponse>\r\n\r\n    @GET(\"/replies/{questionIdx}/{userIdx}\") // 질문에 대한 답변들 조회 (api 22)\r\n    fun getRepliesForQuestion(\r\n        @Path(\"questionIdx\") questionIdx : Long,\r\n        @Path(\"userIdx\") userIdx : Long\r\n    ):Call<RepliesForQuestionResponse>\r\n\r\n    @POST(\"/likes/questions/creation\") // 해당 질문을 좋아요 했을때 호출 (api 27)\r\n    fun getLikeQuestion(\r\n        @Header(\"X-ACCESS-TOKEN\") X_ACCESS_TOKEN : String,\r\n        @Body questionIdx : Long,  // 질문 고유 번호 (좋아요를 누른 질문 번호)\r\n        @Body userIdx : Long   // 유저 고유 번호 (좋아요를 한 유저 번호)\r\n    ):Call<LikeQuestionResponse>\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/QuestionRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/QuestionRetrofitInterface.kt
--- a/app/src/main/java/com/example/mumulcom/QuestionRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/java/com/example/mumulcom/QuestionRetrofitInterface.kt	(date 1644762568038)
@@ -1,5 +1,11 @@
 package com.example.mumulcom
 
+import com.example.mumulcom.detailquestion.DetailCodingQuestionResponse
+import com.example.mumulcom.detailquestion.DetailConceptQuestionResponse
+import com.example.mumulcom.category.CategoryQuestionResponse
+import com.example.mumulcom.detailquestion.LikeQuestionResponse
+import com.example.mumulcom.detailquestion.RepliesForQuestionResponse
+import com.example.mumulcom.home.QuestionResponse
 import retrofit2.Call
 import retrofit2.http.*
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.mumulcom\">\r\n  \r\n    <!--인터넷 사용 권한 설정-->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <!--  카메라 권한  -->\r\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\r\n    <!--  파일 쓰기 권한  -->\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n    <!--  파일 저장 권한  -->\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\r\n    <!--  카메라 기능 사용  -->\r\n    <uses-feature android:name=\"android.hardware.camera\" android:required=\"true\"/>\r\n  \r\n    <application\r\n        android:name=\".GlobalApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:theme=\"@style/Theme.BottomNaviTemplate\">\r\n\r\n        <!--스플래쉬 화면-->\r\n        <activity android:name=\"com.example.mumulcom.SplashActivity\"\r\n            android:theme=\"@style/SplashTheme\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".QuestionBoardActivity\" android:exported=\"false\" />\r\n        <activity android:name=\".QuestionDetailActivity\" />\r\n        <activity android:name=\".QuestionCategoryActivity\"/>\r\n        <activity android:name=\".LoginActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity android:name=\".SignUpCategoryActivity\" />\r\n        <activity android:name=\".SearchActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.SEARCH\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".AnswerActivity\" />\r\n        <activity android:name=\".AnswerCameraShootingActivity\" />\r\n        <activity android:name=\".CheckCodingQuestionActivity\" />\r\n        <activity android:name=\".CheckConceptQuestionActivity\" />\r\n        <activity android:name=\".CodingCameraShootingActivity\" />\r\n        <activity android:name=\".ConceptCameraShootingActivity\" />\r\n\r\n        <!--카카오 로그인-->\r\n        <activity android:name=\"com.kakao.sdk.auth.AuthCodeHandlerActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <!-- Redirect URI: \"kakao{NATIVE_APP_KEY}://oauth“ -->\r\n                <data\r\n                    android:host=\"oauth\"\r\n                    android:scheme=\"kakao0b9d6f7c3471d52a8c2d761dda556e34\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <!--갤러리 이미지 주고받기-->\r\n        <provider\r\n            android:authorities=\"com.example.mumulcom\"\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/filepaths\" />\r\n        </provider>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/AndroidManifest.xml	(date 1644762568017)
@@ -34,24 +34,24 @@
             </intent-filter>
         </activity>
 
-        <activity android:name=".QuestionBoardActivity" android:exported="false" />
-        <activity android:name=".QuestionDetailActivity" />
+        <activity android:name=".category.QuestionBoardActivity" android:exported="false" />
+        <activity android:name=".detailquestion.QuestionDetailActivity" />
         <activity android:name=".QuestionCategoryActivity"/>
-        <activity android:name=".LoginActivity" />
+        <activity android:name=".login.LoginActivity" />
         <activity android:name=".MainActivity" />
-        <activity android:name=".SignUpActivity" />
-        <activity android:name=".SignUpCategoryActivity" />
-        <activity android:name=".SearchActivity">
+        <activity android:name=".signup.SignUpActivity" />
+        <activity android:name=".signup.SignUpCategoryActivity" />
+        <activity android:name=".search.SearchActivity">
             <intent-filter>
                 <action android:name="android.intent.action.SEARCH" />
             </intent-filter>
         </activity>
-        <activity android:name=".AnswerActivity" />
-        <activity android:name=".AnswerCameraShootingActivity" />
-        <activity android:name=".CheckCodingQuestionActivity" />
-        <activity android:name=".CheckConceptQuestionActivity" />
-        <activity android:name=".CodingCameraShootingActivity" />
-        <activity android:name=".ConceptCameraShootingActivity" />
+        <activity android:name=".answer.AnswerActivity" />
+        <activity android:name=".answer.AnswerCameraShootingActivity" />
+        <activity android:name=".codingquestion.CheckCodingQuestionActivity" />
+        <activity android:name=".conceptquestion.CheckConceptQuestionActivity" />
+        <activity android:name=".codingquestion.CodingCameraShootingActivity" />
+        <activity android:name=".conceptquestion.ConceptCameraShootingActivity" />
 
         <!--카카오 로그인-->
         <activity android:name="com.kakao.sdk.auth.AuthCodeHandlerActivity" >
Index: app/src/main/java/com/example/mumulcom/AlarmGeneralItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/AlarmGeneralItem.kt b/app/src/main/java/com/example/mumulcom/AlarmGeneralItem.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/AlarmGeneralItem.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,6 +0,0 @@
-package com.example.mumulcom
-
-class AlarmGeneralItem (
-    var profileImgUrl: String,
-    var content: String,
-): AlarmListItem(TYPE_GENERAL)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ScrapConceptView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ScrapConceptView.kt b/app/src/main/java/com/example/mumulcom/ScrapConceptView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ScrapConceptView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,7 +0,0 @@
-package com.example.mumulcom
-
-interface ScrapConceptView {
-    fun onGetScrapConceptLoading()
-    fun onGetScrapConceptSuccess(result: ArrayList<Question>?)
-    fun onGetScrapConceptFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ScrapResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ScrapResponse.kt b/app/src/main/java/com/example/mumulcom/ScrapResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ScrapResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class ScrapResponse(
-    @SerializedName("isSuccess") val isSuccess : Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<Question>?
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/LoginRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/LoginRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/LoginRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/LoginRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,12 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.Body
-import retrofit2.http.GET
-import retrofit2.http.POST
-import retrofit2.http.Query
-
-interface LoginRetrofitInterface {
-    @POST("/users/login")  // 로그인
-    fun login(@Body email: Login): Call<LoginResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SignUpNicknameService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SignUpNicknameService.kt b/app/src/main/java/com/example/mumulcom/SignUpNicknameService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SignUpNicknameService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,39 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-class SignUpNicknameService {
-    private lateinit var signupNicknameView: SignupNicknameView
-
-    fun setSignupNicknameView(signupNicknameView: SignupNicknameView) {
-        this.signupNicknameView = signupNicknameView
-    }
-
-    // nickname 중복체크를 하고 result 값 받아오기
-    fun getNicknameCheck(nickname: String){
-        val signUpNicknameService = getRetrofit().create(SignUpNicknameCheckInterface::class.java)
-
-        signupNicknameView.getNicknameCheckLoading()
-
-        signUpNicknameService.getNicknameCheck(nickname).enqueue(object :retrofit2.Callback<SignUpNicknameResponse>{
-                override fun onResponse(call: Call<SignUpNicknameResponse>, response: Response<SignUpNicknameResponse>) {
-
-                    val resp = response.body()!!
-
-                    when(resp.code){
-                        1000-> {signupNicknameView.getNicknameCheckSuccess(resp.result)
-                            Log.d("signUpNicknameService/API","성공")
-                        }
-                        else-> signupNicknameView.getNicknameCheckFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<SignUpNicknameResponse>, t: Throwable) {
-                    signupNicknameView.getNicknameCheckFailure(400,"네트워크 오류가 발생했습니다.")
-                }
-            })
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SignUpActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SignUpActivity.kt b/app/src/main/java/com/example/mumulcom/SignUpActivity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SignUpActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,279 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.ContentValues.TAG
-import android.content.Context
-import android.content.Intent
-import android.os.Bundle
-import android.text.Editable
-import android.text.TextWatcher
-import android.util.Log
-import android.util.TypedValue
-import android.view.View
-import android.view.ViewGroup
-import android.view.inputmethod.InputMethodManager
-import android.widget.AdapterView
-import android.widget.ArrayAdapter
-import android.widget.TextView
-import androidx.appcompat.app.AppCompatActivity
-import com.example.mumulcom.databinding.ActivitySignupBinding
-import com.kakao.sdk.user.UserApiClient
-import java.util.regex.Pattern
-
-class SignUpActivity : AppCompatActivity(), SignupNicknameView {
-    lateinit var binding: ActivitySignupBinding
-
-    private var email: String = ""
-    private var name: String = ""
-    private var group: String = ""
-    private var nickname: String = ""
-
-    private var validCurrentNickname: Boolean = false   // 현재 입력한 아이디가 유효한가
-    private var validNickname: Boolean = false   // 중복이 아닌 아이디인가
-    private var validGroup: Boolean = false    // 소속을 선택했는가
-
-    private val nicknameValidation = "^[가-힣a-z0-9]{2,8}$"
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        binding = ActivitySignupBinding.inflate(layoutInflater)
-        setContentView(binding.root)
-
-        // 카카오 로그인 이후 사용자 정보 요청
-        getUserInfo()
-
-        setupSpinner()
-        setupSpinnerHandler()
-
-        // 닉네임 바로바로 검사
-        binding.signupNicknameEt.addTextChangedListener(object: TextWatcher {
-            override fun afterTextChanged(p0: Editable?) {
-                // text가 변경된 후 호출
-                // p0에는 변경 후의 문자열이 담겨있음
-            }
-
-            override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {
-                // text가 변경되기 전 호출
-                // p0에는 변경 전 문자열이 담겨있음
-            }
-
-            override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {
-                // text가 바뀔때마다 호출
-                // 텍스트가 바뀌었다는건 다시 중복 검사를 해야함
-                validNickname = false
-                changeButton()
-                checkNickname() // 닉네임 유효성 검사 함수
-                nickname = p0.toString()
-
-                // edittext 배경도 회색으로 다시 변경
-                binding.signupNicknameEt.setBackgroundResource(R.drawable.basic_outline_gray)
-            }
-        })
-
-        // 닉네임 중복 검사 (중복확인버튼)
-        binding.signupDuplicateCheckBt.setOnClickListener {
-            // 중복 확인
-            getNicknameCheck()
-            // 키보드 사라지기
-            CloseKeyboard()
-        }
-
-        // 화면 배경 누르면 키보드 사라지기
-        binding.signupLy.setOnClickListener {
-            CloseKeyboard()
-        }
-    }
-
-    private fun getUserInfo() {
-        // 사용자 정보 요청
-        UserApiClient.instance.me { kakaoUser, error ->
-            if (error != null) {
-                Log.e(TAG, "사용자 정보 요청 실패", error)
-            }
-            else if (kakaoUser != null) {
-                email = kakaoUser.kakaoAccount?.email.toString()
-                name = kakaoUser.kakaoAccount?.profile?.nickname.toString()
-
-                Log.i(TAG, "사용자 정보 요청 성공 - 이메일: $email 이름: $name")
-            }
-        }
-    }
-
-    // dp 값을 px 값으로 변환해주는 함수
-    private fun dipToPixels(dipValue: Float): Float {
-        return TypedValue.applyDimension(
-            TypedValue.COMPLEX_UNIT_DIP,
-            dipValue,
-            resources.displayMetrics
-        )
-    }
-
-    // 스피너에 어레이 어댑터 연결
-    private fun setupSpinner() {
-        val groups = resources.getStringArray(R.array.signup_group)
-        val adapter = object : ArrayAdapter<String>(this, R.layout.item_spinner){
-            @SuppressLint("CutPasteId")
-            override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
-                val v = super.getView(position, convertView, parent)
-                if(position == count) {
-                    // 마지막 포지션의 textView를 힌트용으로 사용
-                    (v.findViewById<View>(R.id.item_spinner_tv) as TextView).text = ""
-                    // 아이템의 마지막 값을 불러와 hint로 추가함
-                    (v.findViewById<View>(R.id.item_spinner_tv) as TextView).hint = getItem(count)
-                }
-                return v
-            }
-            override fun getCount(): Int {
-                // 마지막 아이템은 hint용이기 때문에 1을 빼줌
-                return super.getCount() - 1
-            }
-        }
-        // 아이템 추가
-        adapter.addAll(groups.toMutableList())
-        // hint로 사용할 문구를 마지막 아이템에 추가
-        adapter.add("클릭하여 소속 찾기")
-        // 어댑터 연결
-        binding.signupGroupSp.adapter = adapter
-        // 스피너 초기값을 마지막 아이템으로 설정
-        binding.signupGroupSp.setSelection(adapter.count)
-
-        // droplist를 스피너와 간격을 두고 나오게 함 -> 아이템 크기 = 125px
-        binding.signupGroupSp.dropDownVerticalOffset = dipToPixels(45f).toInt()
-    }
-
-    // 스피너 클릭 이벤트 핸들러
-    private fun setupSpinnerHandler() {
-        binding.signupGroupSp.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
-            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
-                if (!binding.signupGroupSp.getItemAtPosition(position).equals("클릭하여 소속 찾기")) {
-                    // 소속 선택하면 배경 변경
-                    binding.signupGroupSp.setBackgroundResource(R.drawable.bg_signup_group_selected)
-                    // 소속을 선택하면 group 변수에 사용자 소속 저장하기
-                    group = binding.signupGroupSp.getItemAtPosition(position).toString()
-                    validGroup = true
-                    Log.i(TAG, "소속 확인: $group validGroup: $validGroup")
-                    changeButton()
-                }
-            }
-            override fun onNothingSelected(p0: AdapterView<*>?) {
-            }
-        }
-    }
-
-    // 닉네임 유효성 검사 함수
-    fun checkNickname(): Boolean {
-        var n = binding.signupNicknameEt.text.toString().trim() // 공백제거
-        val p = Pattern.matches(nicknameValidation, n) // 패턴 맞는지 확인
-        return if (p) {
-            // 닉네임 형태가 패턴에 적합할 경우
-            binding.signupNicknameRule1Tv.visibility = View.VISIBLE
-            binding.signupNicknameRule2Tv.visibility = View.VISIBLE
-            binding.signupNicknameValidIv.visibility = View.VISIBLE
-
-            binding.signupNicknameErrorTv.visibility = View.GONE
-            binding.signupNicknameErrorIv.visibility = View.GONE
-            binding.signupNicknameDuplicateValidTv.visibility = View.GONE
-            binding.signupNicknameDuplicateErrorTv.visibility = View.GONE
-            validCurrentNickname = true
-            changeButton()
-            true
-        } else {
-            // 닉네임 형태가 패턴에 적합하지 않을 경우
-            binding.signupNicknameErrorTv.visibility = View.VISIBLE
-            binding.signupNicknameErrorIv.visibility = View.VISIBLE
-
-            binding.signupNicknameRule1Tv.visibility = View.GONE
-            binding.signupNicknameRule2Tv.visibility = View.GONE
-            binding.signupNicknameValidIv.visibility = View.GONE
-            binding.signupNicknameDuplicateValidTv.visibility = View.GONE
-            binding.signupNicknameDuplicateErrorTv.visibility = View.GONE
-            validCurrentNickname = false
-            changeButton()
-            false
-        }
-    }
-
-    private fun getNicknameCheck() {
-        val signUpNicknameService = SignUpNicknameService()
-        signUpNicknameService.setSignupNicknameView(this)
-
-        signUpNicknameService.getNicknameCheck(this.nickname)
-    }
-
-    override fun getNicknameCheckLoading() {
-        Log.d("SignUpActivity/NicknameCheck/API","중복 확인 로딩 중...")
-    }
-
-    override fun getNicknameCheckSuccess(result: Boolean) {
-        // result = ture -> 사용하는 사람이 있음
-        // result = false -> 사용 가능
-        if (result) { // 닉네임 사용 불가능
-            validNickname = !result // validNickname = false
-
-            Log.i(TAG, "닉네임 중복")
-
-            // 중복된 닉네임입니다 출력
-            binding.signupNicknameDuplicateErrorTv.visibility = View.VISIBLE
-            binding.signupNicknameErrorIv.visibility = View.VISIBLE
-
-            binding.signupNicknameRule1Tv.visibility = View.GONE
-            binding.signupNicknameRule2Tv.visibility = View.GONE
-            binding.signupNicknameValidIv.visibility = View.GONE
-
-            changeButton()
-
-        } else {    // 닉네임 사용 가능
-            validNickname = !result // validNickname = true
-
-            Log.i(TAG, "닉네임: $nickname validNickname: $validNickname")
-
-            // 사용 가능한 닉네임입니다 출력
-            binding.signupNicknameDuplicateValidTv.visibility = View.VISIBLE
-            binding.signupNicknameValidIv.visibility = View.VISIBLE
-
-            binding.signupNicknameRule1Tv.visibility = View.GONE
-            binding.signupNicknameRule2Tv.visibility = View.GONE
-            binding.signupNicknameErrorIv.visibility = View.GONE
-
-            // edittext 배경 변경
-            binding.signupNicknameEt.setBackgroundResource(R.drawable.basic_outline_black)
-
-            changeButton()
-        }
-    }
-
-    override fun getNicknameCheckFailure(code: Int, message: String) {
-        when(code){
-            400-> Log.d("SignUpActivity/NicknameCheck/API", message)
-        }
-    }
-
-    fun changeButton() {
-        if (validCurrentNickname && validNickname && validGroup) {
-            // 버튼 선택 가능
-            binding.signupTypingDoneNoSelectIv.setImageResource(R.drawable.ic_typing_done_select)
-            binding.signupTypingDoneNoSelectIv.setOnClickListener {
-                // intent로 사용자 정보 (email, name, nickname, group) 넘겨주기
-                val intent = Intent(this, SignUpCategoryActivity::class.java)
-                intent.putExtra("email", email)
-                intent.putExtra("name", name)
-                intent.putExtra("nickname", nickname)
-                intent.putExtra("group", group)
-                startActivity(intent)
-                finish()
-            }
-        } else {
-            // 버튼 선택 불가능
-            binding.signupTypingDoneNoSelectIv.setImageResource(R.drawable.ic_typing_done_no_select)
-        }
-    }
-
-    fun CloseKeyboard() {
-        var view = this.currentFocus
-
-        if(view != null) {
-            val inputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
-            inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
-        }
-    }
-}
Index: app/src/main/java/com/example/mumulcom/AlarmRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/AlarmRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/AlarmRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/AlarmRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,13 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.*
-
-// 저장한 질문 보기
-interface AlarmRetrofitInterface {
-    @GET("/notices/{userIdx}")  // 코딩 질문
-    fun getAlarms(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Path("userIdx") userIdx : Long,    // 유저 인덱스
-    ):Call<AlarmResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabCodingQuestionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabCodingQuestionView.kt b/app/src/main/java/com/example/mumulcom/TabCodingQuestionView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabCodingQuestionView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,7 +0,0 @@
-package com.example.mumulcom
-
-interface TabCodingQuestionView {
-    fun onGetCodingQuestionsLoading()
-    fun onGetCodingQuestionsSuccess(result: ArrayList<Question>?)
-    fun onGetCodingQuestionsFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/AlarmDateItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/AlarmDateItem.kt b/app/src/main/java/com/example/mumulcom/AlarmDateItem.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/AlarmDateItem.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,5 +0,0 @@
-package com.example.mumulcom
-
-class AlarmDateItem(
-    val diffTime: String
-) : AlarmListItem(TYPE_DATE)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/RecentQuestionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/RecentQuestionAdapter.kt b/app/src/main/java/com/example/mumulcom/RecentQuestionAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/RecentQuestionAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,88 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import com.example.mumulcom.databinding.RecentQuestionListItemBinding
-
-class RecentQuestionAdapter(val context: Context):RecyclerView.Adapter<RecentQuestionAdapter.QuestionViewHolder>() {
-
-    private val questionList = ArrayList<Question>()
-
-    // 외부 작업을 위한 클릭 인터페이스 정의
-    interface QuestionClickListener {
-        fun onItemClick(question: Question)
-    }
-    // 리스너 객체를 전달받는 함수랑 리스너 객체를 저장할 변수
-    private lateinit var questionClickListener : QuestionClickListener
-
-    fun setQuestionClickListener(questionClickListener: QuestionClickListener){
-        this.questionClickListener = questionClickListener
-    }
-
-
-    override fun onCreateViewHolder(
-        parent: ViewGroup,
-        viewType: Int
-    ): QuestionViewHolder {
-        val binding:RecentQuestionListItemBinding = RecentQuestionListItemBinding.inflate(LayoutInflater.from(parent.context),parent,false)
-        return QuestionViewHolder(binding)
-    }
-
-    override fun onBindViewHolder(holder: QuestionViewHolder, position: Int) {
-        holder.bind(questionList[position])
-        // recyclerview 의 각 아이템을 클릭할때
-        holder.itemView.setOnClickListener {
-            questionClickListener.onItemClick(questionList[position])
-        }
-        holder.binding.itemLikeIv.setOnClickListener {
-            // TODO 좋아요 이미지를 눌렀을때 -> 하트 색 바뀌고 좋아요 1증가 , 서버에 정보 전달.
-        }
-    }
-
-    override fun getItemCount(): Int {
-        return questionList.size
-    }
-
-
-
-
-
-    @SuppressLint("NotifyDataSetChanged")
-    fun addQuestions(questions:ArrayList<Question> ){
-        this.questionList.clear()
-        this.questionList.addAll(questions)
-
-        notifyDataSetChanged()
-    }
-
-
-    inner class QuestionViewHolder(val binding: RecentQuestionListItemBinding):RecyclerView.ViewHolder(binding.root){
-
-
-        fun bind(question: Question){
-
-            Glide.with(context).load(question.profileImgUrl).into(binding.itemIconIv) // 프로필 이미지
-            binding.itemNameTv.text = question.nickname // 닉네임
-            binding.itemDateTv.text = question.createdAt // 질문한 날짜
-            binding.itemTitleTv.text = question.title // 질문 제목
-            binding.itemCommentTv.text = question.replyCount.toString() // 답변 갯수
-            binding.itemLikeTv.text  = question.likeCount.toString() // 좋아요 갯수
-
-
-            binding.itemBigCategoryTv.text = "#"+question.bigCategoryName
-
-            if(question.smallCategoryName!=null){
-                binding.itemSmallCategoryTv.text = "#"+question.smallCategoryName
-            }
-
-
-
-
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SearchService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SearchService.kt b/app/src/main/java/com/example/mumulcom/SearchService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SearchService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,74 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-class SearchService {
-    private lateinit var searchCodingQuestionView: SearchCodingQuestionView
-    private lateinit var searchConceptQuestionView: SearchConceptQuestionView
-
-    fun setSearchCodingQuestionView(searchCodingQuestionView: SearchCodingQuestionView) {
-        this.searchCodingQuestionView = searchCodingQuestionView
-    }
-
-    fun setSearchConceptQuestionView(searchConceptQuestionView: SearchConceptQuestionView) {
-        this.searchConceptQuestionView = searchConceptQuestionView
-    }
-
-    // 서버에서 코딩 질문 중 keyword와 맞는 데이터를 가져오는 부분
-    fun getCodingQuestions(keyword:String?){
-        val searchCodingQuestionService = getRetrofit().create(SearchRetrofitInterface::class.java)
-
-        searchCodingQuestionView.onGetCodingQuestionsLoading()
-
-        searchCodingQuestionService.getCodingQuestions(keyword)
-            .enqueue(object :retrofit2.Callback<CodingQuestionResponse>{
-                override fun onResponse(call: Call<CodingQuestionResponse>, response: Response<CodingQuestionResponse>) {
-
-                    val resp = response.body()!!
-
-                    when(resp.code){
-                        1000-> {searchCodingQuestionView.onGetCodingQuestionsSuccess(resp.result)
-                            Log.d("SearchCodingQuestionService/API","성공")
-
-                        }
-                        else-> searchCodingQuestionView.onGetCodingQuestionsFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<CodingQuestionResponse>, t: Throwable) {
-                    searchCodingQuestionView.onGetCodingQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-                }
-            })
-    }
-
-    // 서버에서 개념 질문 중 keyword와 맞는 데이터를 가져오는 부분
-    fun getConceptQuestions(keyword:String?){
-        val searchConceptQuestionService = getRetrofit().create(SearchRetrofitInterface::class.java)
-
-        searchConceptQuestionView.onGetConceptQuestionsLoading()
-
-        searchConceptQuestionService.getConceptQuestions(keyword)
-            .enqueue(object :retrofit2.Callback<ConceptQuestionResponse>{
-                override fun onResponse(call: Call<ConceptQuestionResponse>, response: Response<ConceptQuestionResponse>) {
-
-                    val resp = response.body()!!
-
-                    when(resp.code){
-                        1000-> {searchConceptQuestionView.onGetConceptQuestionsSuccess(resp.result)
-                            Log.d("SearchConceptQuestionService/API","성공")
-
-                        }
-                        else-> searchConceptQuestionView.onGetConceptQuestionsFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<ConceptQuestionResponse>, t: Throwable) {
-                    searchConceptQuestionView.onGetConceptQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-                }
-            })
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/DetailConceptQuestionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/DetailConceptQuestionView.kt b/app/src/main/java/com/example/mumulcom/DetailConceptQuestionView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/DetailConceptQuestionView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,8 +0,0 @@
-package com.example.mumulcom
-
-
-interface DetailConceptQuestionView {
-    fun onGetDetailConceptQuestionsLoading()
-    fun onGetDetailConceptQuestionsSuccess(result: ArrayList<DetailConceptQuestion>)
-    fun onGetDetailConceptQuestionsFailure(code: Int, message: String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/QuestionResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/QuestionResponse.kt b/app/src/main/java/com/example/mumulcom/QuestionResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/QuestionResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,12 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class QuestionResponse(
-
-    @SerializedName("isSuccess") val isSuccess : Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<Question>?
-
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/DetailCodingQuestionService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/DetailCodingQuestionService.kt b/app/src/main/java/com/example/mumulcom/DetailCodingQuestionService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/DetailCodingQuestionService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,48 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-
-import retrofit2.Call
-import retrofit2.Response
-
-class DetailCodingQuestionService {
-
-    private lateinit var detailCodingQuestionView: DetailCodingQuestionView // 선언
-
-    // 외부 접근
-    fun setDetailCodingQuestionService(detailCodingQuestionView: DetailCodingQuestionView){
-        this.detailCodingQuestionView = detailCodingQuestionView
-    }
-
-    // 서버에서 해당 (개념) 질문에 대한 상세 내용 받아오는 함수
-    fun getDetailConceptQuestion(questionIdx:Long,userIdx:Long){
-        val detailConceptQuestionService = getRetrofit().create(QuestionRetrofitInterface::class.java)
-
-        detailCodingQuestionView.onGetDetailCodingQuestionsLoading() // 호출전
-
-        detailConceptQuestionService.getDetailCodingQuestion(questionIdx,userIdx)
-            .enqueue(object : retrofit2.Callback<DetailCodingQuestionResponse>{
-                override fun onResponse(call: Call<DetailCodingQuestionResponse>, response: Response<DetailCodingQuestionResponse>) {
-                    // 호출 성공
-                    val resp = response.body()!!
-//                    Log.d("test",resp.toString())
-                    when(resp.code){
-                        1000->{
-                            detailCodingQuestionView.onGetDetailCodingQuestionsSuccess(resp.result)
-                            Log.d("DetailConceptQuestionService/API","성공")
-                        }else->
-                        detailCodingQuestionView.onGetDetailCodingQuestionsFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<DetailCodingQuestionResponse>, t: Throwable) {
-                    // 호출 실패
-                    detailCodingQuestionView.onGetDetailCodingQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-
-                }
-
-            })
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/CategoryQuestionService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/CategoryQuestionService.kt b/app/src/main/java/com/example/mumulcom/CategoryQuestionService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/CategoryQuestionService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,45 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-class CategoryQuestionService {
-    private lateinit var categoryQuestionView: CategoryQuestionView
-
-    // 외부 접근
-    fun setCategoryQuestionService(categoryQuestionView: CategoryQuestionView){
-        this.categoryQuestionView = categoryQuestionView
-    }
-
-    // 서버에서 카테고리별 question 가져오는 부분
-    fun getCategoryQuestions(type:Int=1,sort:Int=1,bigCategoryIdx:Int,smallCategoryIdx:Int?,isReplied:Boolean=false,lastQuestionIdx:Int,perPage:Int){
-        val categoryQuestionService = getRetrofit().create(QuestionRetrofitInterface::class.java)
-
-        categoryQuestionView.onGetQuestionsLoading()
-
-        categoryQuestionService.getCategoryQuestions(type,sort,bigCategoryIdx ,smallCategoryIdx ,isReplied ,lastQuestionIdx ,perPage )
-            .enqueue(object :retrofit2.Callback<CategoryQuestionResponse>{
-                override fun onResponse(call: Call<CategoryQuestionResponse>, response: Response<CategoryQuestionResponse>) {
-
-                    val resp = response.body()!!
-
-                    when(resp.code){
-                        1000-> {categoryQuestionView.onGetQuestionsSuccess(resp.result)
-                            Log.d("CategoryQuestionService/API","성공")
-
-                        }
-                        else-> categoryQuestionView.onGetQuestionsFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<CategoryQuestionResponse>, t: Throwable) {
-                    categoryQuestionView.onGetQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-                }
-
-            })
-
-    }
-
-}// end of CategoryQuestionService
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabConceptQuestionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabConceptQuestionView.kt b/app/src/main/java/com/example/mumulcom/TabConceptQuestionView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabConceptQuestionView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,7 +0,0 @@
-package com.example.mumulcom
-
-interface TabConceptQuestionView {
-    fun onGetConceptQuestionsLoading()
-    fun onGetConceptQuestionsSuccess(result: ArrayList<Question>?)
-    fun onGetConceptQuestionsFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabQuestionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabQuestionAdapter.kt b/app/src/main/java/com/example/mumulcom/TabQuestionAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabQuestionAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,72 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import com.example.mumulcom.databinding.QuestionListItemBinding
-
-class TabQuestionAdapter(var context: Context?)
-    : RecyclerView.Adapter<TabQuestionAdapter.TabQuestionViewHolder>() {
-
-    private val questionList = ArrayList<Question>()
-
-    // 클릭 인터페이스 정의
-    interface TabQuestionClickListener{
-        fun onItemClick(question: Question)
-    }
-
-    // 리스너 객체를 전달받는 함수랑 리스너 객체를 저장할 변수
-    private lateinit var tabQuestionClickListener : TabQuestionAdapter.TabQuestionClickListener
-
-    fun setTabQuestionClickListener(tabQuestionClickListener: TabQuestionAdapter.TabQuestionClickListener){
-        this.tabQuestionClickListener = tabQuestionClickListener
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TabQuestionViewHolder {
-        val binding:QuestionListItemBinding = QuestionListItemBinding.inflate(LayoutInflater.from(parent.context),parent,false)
-        return TabQuestionViewHolder(binding)
-    }
-
-    override fun onBindViewHolder(holderQuestion: TabQuestionAdapter.TabQuestionViewHolder, position: Int) {
-        holderQuestion.bind(questionList[position])
-        //recyclerView 의 각 아이템을 클릭할때
-        holderQuestion.itemView.setOnClickListener {
-            tabQuestionClickListener.onItemClick(questionList[position])
-        }
-    }
-
-    override fun getItemCount(): Int {
-        return questionList.size
-    }
-
-    @SuppressLint("NotifyDataSetChanged")
-    fun addTabQuestions(question:ArrayList<Question>){
-        this.questionList.clear()
-        this.questionList.addAll(question)
-
-        notifyDataSetChanged()
-    }
-
-    inner class TabQuestionViewHolder(val binding: QuestionListItemBinding):RecyclerView.ViewHolder(binding.root){
-        // # 문자열 바로 사용해서 추가함
-        @SuppressLint("SetTextI18n")
-        fun bind(question: Question) {
-            context?.let { Glide.with(it).load(question.profileImgUrl).into(binding.itemIconIv) }
-            binding.itemNameTv.text = question.nickname
-            binding.itemDateTv.text = question.createdAt
-            binding.itemTitleTv.text = question.title
-            if(question.bigCategoryName!=null){
-                binding.itemBigCategoryTv.text = "#" + question.bigCategoryName
-            }
-            if(question.smallCategoryName!=null){
-                binding.itemSmallCategoryTv.text = "#" + question.smallCategoryName
-            }
-            binding.itemCommentTv.text = question.replyCount.toString()
-            binding.itemLikeTv.text = question.likeCount.toString()
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabResponse.kt b/app/src/main/java/com/example/mumulcom/TabResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class TabResponse(
-    @SerializedName("isSuccess") val isSuccess : Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<Question>?
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/CheckConceptQuestionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/CheckConceptQuestionActivity.kt b/app/src/main/java/com/example/mumulcom/CheckConceptQuestionActivity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/CheckConceptQuestionActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,375 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.ContentValues
-import android.content.Context
-import android.content.Intent
-import android.net.Uri
-import android.os.Bundle
-import android.util.Log
-import android.util.TypedValue
-import androidx.activity.result.ActivityResultLauncher
-import androidx.appcompat.app.AppCompatActivity
-import androidx.viewpager2.widget.ViewPager2
-
-import android.view.View
-import android.view.ViewGroup
-import android.widget.AdapterView
-import android.widget.ArrayAdapter
-import android.widget.TextView
-import android.widget.Toast
-import com.example.mumulcom.databinding.ActivityCheckconceptquestionBinding
-
-
-class CheckConceptQuestionActivity:AppCompatActivity() {
-
-    lateinit var binding: ActivityCheckconceptquestionBinding
-
-    private lateinit var getResultText: ActivityResultLauncher<Intent>
-    private var albumDatas=ArrayList<Album>()//뷰페이저
-
-    private var realUri: String=""
-
-    private var bigCategory: String? = null    // 선택한 상위 카테고리
-    private var smallCategory: String? = null  // 선택한 하위 카테고리
-
-    // 스피너 어댑터
-    private lateinit var bigCategoryAdapter: ArrayAdapter<String>
-    private lateinit var smallCategoryAdapter: ArrayAdapter<String>
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        binding = ActivityCheckconceptquestionBinding.inflate(layoutInflater)
-        setContentView(binding.root)
-
-        // 카테고리 초기화
-        setupBigCategorySpinner()
-        setupBigCategorySpinnerHandler(1)
-
-        binding.checkconceptquestionBackIv.setOnClickListener {
-            startActivity(Intent(this, QuestionCategoryActivity::class.java))
-        }
-
-        binding.checkconceptquestionPlusIv.setOnClickListener {
-            startActivity(Intent(this, ConceptCameraShootingActivity::class.java))
-        }
-        binding.checkconceptquestionQuestionIv.setOnClickListener {
-            required()
-        }
-
-//        binding.checkconceptquestionBackIv.setOnClickListener {
-//            if (getIntent().getExtras() != null) { //if  has value pass from A
-//                val image = intent.extras!!.getString("image")
-//                if (image != null) {
-//                    val imageUri = Uri.parse(image)
-//                } else {
-//                    Toast.makeText(getApplication(), "null", Toast.LENGTH_SHORT).show();
-//                }
-//                Log.d("u4", intent.getStringExtra("image").toString())
-//                Log.d("u5", Uri.parse(intent.getStringExtra("image")).toString())
-//            }
-//        }
-
-
-        //임시뷰페이저
-        albumDatas.apply {
-//            if (realUri!=null) {
-//                add(Album(Uri.parse(intent.getStringExtra(realUri))))
-//                Log.d("real", (intent.getStringExtra(realUri).toString()))
-//            }
-//            add(Album(com.example.mumulcom.R.drawable.ic_edit))
-//            add(Album(com.example.mumulcom.R.drawable.ic_edit))
-//            add(Album(com.example.mumulcom.R.drawable.ic_edit))
-//            add(Album(com.example.mumulcom.R.drawable.ic_edit))
-//            add(Album(com.example.mumulcom.R.drawable.ic_edit))
-        }
-
-        val ViewPagerAdapter = ViewPagerAdapter(albumDatas)
-        binding.checkconceptquestionVp.adapter = ViewPagerAdapter// 뷰페이저 어댑터 생성
-        binding.checkconceptquestionVp.orientation = ViewPager2.ORIENTATION_HORIZONTAL // 방향을 가로로
-        binding.checkconceptIndicator.setViewPager(binding.checkconceptquestionVp)
-        binding.checkconceptIndicator.createIndicators(5, 0);
-
-
-    }
-
-
-    private fun required() {
-        /*if (selectDatas.isEmpty()||selectBottomDatas.isEmpty()){
-            Toast.makeText(this, "카테고리를 선택해주세요.", Toast.LENGTH_SHORT).show()
-
-            return
-        }*/
-        if (binding.checkconceptquestionTitleTextEt.text.isEmpty()) {
-
-            Toast.makeText(this, "제목을 작성해주세요.", Toast.LENGTH_SHORT).show()
-
-            return
-        }
-        if (binding.checkconceptquestionCuriousconceptEt.text.isEmpty()) {
-
-            Toast.makeText(this, "궁금한 개념을 작성해주세요.", Toast.LENGTH_SHORT).show()
-
-            return
-        }
-        binding.checkconceptquestionQuestionIv.setImageResource(com.example.mumulcom.R.drawable.ic_click_question)
-    }
-
-    /********************* 스피너 ********************/
-    // dp 값을 px 값으로 변환해주는 함수
-    private fun dipToPixels(dipValue: Float): Float {
-        return TypedValue.applyDimension(
-            TypedValue.COMPLEX_UNIT_DIP,
-            dipValue,
-            resources.displayMetrics
-        )
-    }
-
-    // big category spinner에 arrayadapter 연결
-    private fun setupBigCategorySpinner() {
-        // 상위 카테고리들 (앱, 웹, 서버, 프로그래밍 언어, 기타)
-        val bigCategoryArray = resources.getStringArray(R.array.big_category)
-        bigCategoryAdapter = object : ArrayAdapter<String>(this, R.layout.item_big_category){
-            @SuppressLint("CutPasteId")
-            override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
-                val v = super.getView(position, convertView, parent)
-                if(position == count) {
-                    // 마지막 포지션의 textView를 힌트용으로 사용
-                    (v.findViewById<View>(R.id.item_big_category_tv) as TextView).text = ""
-                    // 아이템의 마지막 값을 불러와 hint로 추가함
-                    (v.findViewById<View>(R.id.item_big_category_tv) as TextView).hint = getItem(count)
-                }
-                return v
-            }
-            override fun getCount(): Int {
-                // 마지막 아이템은 hint용이기 때문에 1을 빼줌
-                return super.getCount() - 1
-            }
-        }
-        // 아이템 추가
-        bigCategoryAdapter.addAll(bigCategoryArray.toMutableList())
-        // hint로 사용할 문구를 마지막 아이템에 추가
-        bigCategoryAdapter.add("상위 선택")
-        // 어댑터 연결
-        binding.checkconceptquestionBigCategorySp.adapter = bigCategoryAdapter
-        // 스피너 초기값을 마지막 아이템으로 설정
-        binding.checkconceptquestionBigCategorySp.setSelection(bigCategoryAdapter.count)
-
-        // droplist를 스피너와 간격을 두고 나오게 함 -> 아이템 크기 = 125px
-        binding.checkconceptquestionBigCategorySp.dropDownVerticalOffset = dipToPixels(45f).toInt()
-    }
-
-    // 스피너 클릭 이벤트 핸들러
-    private fun setupBigCategorySpinnerHandler(type: Int) {
-        binding.checkconceptquestionBigCategorySp.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
-            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
-                binding.checkconceptquestionBigCategorySp.setBackgroundResource(R.drawable.bg_category_outline)
-                binding.checkconceptquestionSmallCategorySp.isEnabled = true
-
-                when(type) {
-                    1 -> {
-                        if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("앱")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 앱 하위 카테고리 (안드로이드, iOS)
-                            val smallCategoryAppArray = resources.getStringArray(R.array.small_category_app)
-                            setupSmallCategorySpinner(smallCategoryAppArray)
-                            setupSmallCategorySpinnerHandler(1)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("웹")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 웹 하위 카테고리 (HTML, CSS, React)
-                            val smallCategoryWebArray = resources.getStringArray(R.array.small_category_web)
-                            setupSmallCategorySpinner(smallCategoryWebArray)
-                            setupSmallCategorySpinnerHandler(1)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("서버")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 서버 하위 카테고리 (Node.js, Spring)
-                            val smallCategoryServerArray = resources.getStringArray(R.array.small_category_server)
-                            setupSmallCategorySpinner(smallCategoryServerArray)
-                            setupSmallCategorySpinnerHandler(1)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("프로그래밍 언어")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 프로그래밍 언어 하위 카테고리 (C, C++, JavaScript, Java, Python)
-                            val smallCategoryProgramingArray = resources.getStringArray(R.array.small_category_programing)
-                            setupSmallCategorySpinner(smallCategoryProgramingArray)
-                            setupSmallCategorySpinnerHandler(1)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("기타")) {
-                            selectedCategory(position)
-                            // 기타 선택 시 하위 선택 스피너 사라짐
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.GONE
-                            // 하위 카테고리에 null 값
-                            smallCategory = null
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("상위 선택")) {
-                            bigCategory = null
-                            Log.i(ContentValues.TAG, "상위 카테고리 확인: $bigCategory")
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 하위 선택 뜨기
-                            val smallCategoryArray = resources.getStringArray(R.array.small_category)
-                            setupSmallCategorySpinner(smallCategoryArray)
-                            setupSmallCategorySpinnerHandler(1)
-                            // 하위 카테고리 스피너 사용 불가
-                            binding.checkconceptquestionSmallCategorySp.isEnabled = false
-                        }
-                    }
-
-                    2 -> {
-                        if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("앱")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 앱 하위 카테고리 (안드로이드, iOS)
-                            val smallCategoryAppArray = resources.getStringArray(R.array.small_category_app)
-                            setupSmallCategorySpinner(smallCategoryAppArray)
-                            setupSmallCategorySpinnerHandler(2)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("웹")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 웹 하위 카테고리 (HTML, CSS, React)
-                            val smallCategoryWebArray = resources.getStringArray(R.array.small_category_web)
-                            setupSmallCategorySpinner(smallCategoryWebArray)
-                            setupSmallCategorySpinnerHandler(2)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("서버")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 서버 하위 카테고리 (Node.js, Spring)
-                            val smallCategoryServerArray = resources.getStringArray(R.array.small_category_server)
-                            setupSmallCategorySpinner(smallCategoryServerArray)
-                            setupSmallCategorySpinnerHandler(2)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("프로그래밍 언어")) {
-                            selectedCategory(position)
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 프로그래밍 언어 하위 카테고리 (C, C++, JavaScript, Java, Python)
-                            val smallCategoryProgramingArray = resources.getStringArray(R.array.small_category_programing)
-                            setupSmallCategorySpinner(smallCategoryProgramingArray)
-                            setupSmallCategorySpinnerHandler(2)
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("기타")) {
-                            selectedCategory(position)
-                            // 기타 선택 시 하위 선택 스피너 사라짐
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.GONE
-                            // 하위 카테고리에 null 값
-                            smallCategory = null
-                        }
-
-                        else if (binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).equals("상위 선택")) {
-                            bigCategory = null
-                            Log.i(ContentValues.TAG, "상위 카테고리 확인: $bigCategory")
-                            binding.checkconceptquestionSmallCategorySp.visibility = View.VISIBLE
-                            // 하위 선택 뜨기
-                            val smallCategoryArray = resources.getStringArray(R.array.small_category)
-                            setupSmallCategorySpinner(smallCategoryArray)
-                            setupSmallCategorySpinnerHandler(2)
-                            // 하위 카테고리 스피너 사용 불가
-                            binding.checkconceptquestionSmallCategorySp.isEnabled = false
-                        }
-                    }
-                }
-            }
-            override fun onNothingSelected(p0: AdapterView<*>?) {
-            }
-        }
-    }
-
-    private fun selectedCategory(position: Int) {
-        // 상위 선택하면 배경 변경
-        binding.checkconceptquestionBigCategorySp.setBackgroundResource(R.drawable.bg_category_selected)
-        // bigCategory 변수에 상위 카테고리 저장하기
-        bigCategory = binding.checkconceptquestionBigCategorySp.getItemAtPosition(position).toString()
-        Log.i(ContentValues.TAG, "상위 카테고리 확인: $bigCategory")
-    }
-
-
-
-    // big category spinner에 arrayadapter 연결
-    private fun setupSmallCategorySpinner(array: Array<String>) {
-        smallCategoryAdapter = object : ArrayAdapter<String>(this, R.layout.item_small_category){
-            @SuppressLint("CutPasteId")
-            override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
-                val v = super.getView(position, convertView, parent)
-                if(position == count) {
-                    // 마지막 포지션의 textView를 힌트용으로 사용
-                    (v.findViewById<View>(R.id.item_small_category_tv) as TextView).text = ""
-                    // 아이템의 마지막 값을 불러와 hint로 추가함
-                    (v.findViewById<View>(R.id.item_small_category_tv) as TextView).hint = getItem(count)
-                }
-                return v
-            }
-            override fun getCount(): Int {
-                // 마지막 아이템은 hint용이기 때문에 1을 빼줌
-                return super.getCount() - 1
-            }
-        }
-        // 아이템 추가
-        smallCategoryAdapter.addAll(array.toMutableList())
-        // hint로 사용할 문구를 마지막 아이템에 추가
-        smallCategoryAdapter.add("하위 선택")
-        // 어댑터 연결
-        binding.checkconceptquestionSmallCategorySp.adapter = smallCategoryAdapter
-        // 스피너 초기값을 마지막 아이템으로 설정
-        binding.checkconceptquestionSmallCategorySp.setSelection(smallCategoryAdapter.count)
-
-        // droplist를 스피너와 간격을 두고 나오게 함 -> 아이템 크기 = 125px
-        binding.checkconceptquestionSmallCategorySp.dropDownVerticalOffset = dipToPixels(45f).toInt()
-    }
-
-    // 스피너 클릭 이벤트 핸들러
-    private fun setupSmallCategorySpinnerHandler(type: Int) {
-        binding.checkconceptquestionSmallCategorySp.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
-            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
-                binding.checkconceptquestionSmallCategorySp.setBackgroundResource(R.drawable.bg_category_outline)
-
-                when(type) {
-                    1 -> {
-                        if (!binding.checkconceptquestionSmallCategorySp.getItemAtPosition(position).equals("하위 선택")) {
-                            // 하위 카테고리 선택하면 배경 변경
-                            binding.checkconceptquestionSmallCategorySp.setBackgroundResource(R.drawable.bg_category_selected)
-                            // SmallCategory 변수에 하위 카테고리 저장하기
-                            smallCategory = binding.checkconceptquestionSmallCategorySp.getItemAtPosition(position).toString()
-                            Log.i(ContentValues.TAG, "하위 카테고리 확인: $smallCategory")
-                        } else {
-                            smallCategory = null
-                            Log.i(ContentValues.TAG, "하위 카테고리 확인: $smallCategory")
-                            // Toast.makeText(context, "상위 카테고리를 선택해주세요!", Toast.LENGTH_SHORT).show()
-                        }
-                    }
-                    2 -> {
-                        if (!binding.checkconceptquestionSmallCategorySp.getItemAtPosition(position).equals("하위 선택")) {
-                            // 하위 카테고리 선택하면 배경 변경
-                            binding.checkconceptquestionSmallCategorySp.setBackgroundResource(R.drawable.bg_category_selected)
-                            // SmallCategory 변수에 하위 카테고리 저장하기
-                            smallCategory = binding.checkconceptquestionSmallCategorySp.getItemAtPosition(position).toString()
-                            Log.i(ContentValues.TAG, "하위 카테고리 확인: $smallCategory")
-                        } else {
-                            smallCategory = null
-                            Log.i(ContentValues.TAG, "하위 카테고리 확인: $smallCategory")
-                            // Toast.makeText(context, "상위 카테고리를 선택해주세요!", Toast.LENGTH_SHORT).show()
-                        }
-                    }
-                }
-
-            }
-            override fun onNothingSelected(p0: AdapterView<*>?) {
-            }
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/RepliesForQuestionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/RepliesForQuestionAdapter.kt b/app/src/main/java/com/example/mumulcom/RepliesForQuestionAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/RepliesForQuestionAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,105 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import com.example.mumulcom.databinding.QuestionAnswerItemBinding
-
-class RepliesForQuestionAdapter(val context: Context):RecyclerView.Adapter<RepliesForQuestionAdapter.ViewHolder>() {
-
-
-    private val replyList = ArrayList<Reply>()
-    private var isLike : Boolean = false // 좋아요
-    private var isSelect : Boolean = false // 체택하기
-    private lateinit var imageViewPagerAdapter: ImageViewPagerAdapter
-
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
-        val binding: QuestionAnswerItemBinding =  QuestionAnswerItemBinding.inflate(LayoutInflater.from(parent.context),parent,false)
-        return ViewHolder(binding)
-    }
-
-    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
-        holder.bind(replyList[position])
-        holder.binding.viewPager.setOnClickListener {
-            // todo 이미지 확대
-        }
-        // 좋아요 처리
-        holder.binding.itemLikeIv.setOnClickListener {
-            isLike = !isLike
-            if(isLike){
-                holder.binding.itemLikeIv.setImageResource(R.drawable.ic_liked)
-                // todo api 호출
-            }else
-                holder.binding.itemLikeIv.setImageResource(R.drawable.ic_like)
-        }
-        // 채택하기 처리
-        holder.binding.selectAnswerTv.setOnClickListener {
-            holder.binding.selectAnswerTv.visibility = View.GONE
-            holder.binding.selectAnswerIv.visibility = View.VISIBLE
-        }
-        holder.binding.selectAnswerIv.setOnClickListener {
-            holder.binding.selectAnswerIv.visibility = View.GONE
-            holder.binding.selectAnswerTv.visibility = View.VISIBLE
-        }
-
-    }
-
-    override fun getItemCount(): Int {
-        return replyList.size
-    }
-
-
-
-
-    @SuppressLint("NotifyDataSetChanged")
-    fun addQuestions(replies:ArrayList<Reply> ){
-        this.replyList.clear()
-        this.replyList.addAll(replies)
-
-        notifyDataSetChanged()
-    }
-
-
-
-    inner class ViewHolder(val binding:QuestionAnswerItemBinding):RecyclerView.ViewHolder(binding.root){
-
-        fun bind(reply: Reply){
-            Glide.with(context).load(reply.profileImgUrl).into(binding.profileIv) // 프로필 이미지
-            binding.nickNameTv.text = reply.nickname // 닉네임
-            binding.createdAtTv.text = reply.createdAt // 작성 날짜
-
-            if(reply.replyUrl==null){
-//                binding.replyUrl.visibility = View.GONE
-                binding.replyUrl.text = "참고 링크 : 없음."// 참고 링크
-            }else{
-                binding.replyUrl.text = "참고 링크 : "+reply.replyUrl // 참고 링크
-            }
-
-            binding.contentTv.text = reply.content // 답변 내용
-            binding.contentTv.text = reply.reReplyCount.toString() // 대댓글수
-            binding.itemLikeTv.text = reply.likeCount.toString() // 좋아요 수
-
-            // 답변 이미지 viewpager 연결
-            imageViewPagerAdapter = ImageViewPagerAdapter(context)
-            if(reply.replyImgUrl.size==0){
-                binding.itemL13.visibility = View.GONE
-            }else{
-                imageViewPagerAdapter.addQuestions(reply.replyImgUrl)
-                binding.viewPager.adapter = imageViewPagerAdapter
-                binding.indicator.setViewPager(binding.viewPager)
-            }
-
-
-
-        }
-
-    }
-
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabAnswerFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabAnswerFragment.kt b/app/src/main/java/com/example/mumulcom/TabAnswerFragment.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabAnswerFragment.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,179 +0,0 @@
-package com.example.mumulcom
-
-import android.content.Intent
-import android.os.Bundle
-import android.util.Log
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.fragment.app.Fragment
-import androidx.recyclerview.widget.LinearLayoutManager
-import com.example.mumulcom.databinding.FragmentTabMyAnswerBinding
-
-// 내가 단 답변
-class TabAnswerFragment : Fragment(), TabCodingAnswerView, TabConceptAnswerView {
-    lateinit var binding: FragmentTabMyAnswerBinding
-
-    private lateinit var tabAnswerAdapter: TabAnswerAdapter
-    private lateinit var tabConceptAnswerAdapter: TabAnswerAdapter
-
-    private var jwt : String = ""
-    private var userIdx : Long = 0
-    private var isAdopted : Boolean = false //(답변달린 질문만 보기 체크)
-
-    override fun onCreateView( inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?
-    ): View? {
-        binding = FragmentTabMyAnswerBinding.inflate(inflater, container, false)
-
-        jwt = context?.let { getJwt(it) }.toString()
-        userIdx = context?.let { getUserIdx(it) }!!
-
-        // default값은 코딩 질문
-        initCodingRecyclerView()
-        checkCodingAdopted()
-
-        return binding.root
-    }
-
-    override fun onStart() {
-        super.onStart()
-
-        binding.tabMyAnswerRadioGroup.setOnCheckedChangeListener { group, checkedId ->
-            when (checkedId) {
-                R.id.tab_my_answer_coding_btn -> {
-                    initCodingRecyclerView()
-                    checkCodingAdopted()
-                }
-                R.id.tab_my_answer_concept_btn -> {
-                    initConceptRecyclerView()
-                    checkConceptAdopted()
-                }
-            }
-        }
-    }
-
-    private fun initCodingRecyclerView() {
-        getTabCodingAnswer(jwt, userIdx, isAdopted)
-        tabAnswerAdapter = TabAnswerAdapter(context)
-        tabAnswerAdapter.setTabAnswerClickListener(object: TabAnswerAdapter.TabAnswerClickListener {
-            override fun onItemClick(question: Question) {
-                startCodingQuestionDetailActivity(question)// 질문 상세 보기 페이지로 이동
-            }
-        })
-        binding.tabMyAnswerResultRv.adapter = tabAnswerAdapter
-        binding.tabMyAnswerResultRv.layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL,false)
-    }
-
-    private fun startCodingQuestionDetailActivity(question: Question){
-        val intent = Intent(requireContext(), QuestionDetailActivity::class.java)
-        intent.putExtra("bigCategoryName", question.bigCategoryName) // 상위 카테고리명 넘김
-        intent.putExtra("questionIdx", question.questionIdx) // 질문 고유 번호 넘김
-        intent.putExtra("type", 1)  // 코딩 질문
-        startActivity(intent)
-    }
-
-    private fun initConceptRecyclerView() {
-        getTabConceptAnswer(jwt, userIdx, isAdopted)
-        tabConceptAnswerAdapter = TabAnswerAdapter(context)
-        tabConceptAnswerAdapter.setTabAnswerClickListener(object: TabAnswerAdapter.TabAnswerClickListener {
-            override fun onItemClick(question: Question) {
-                startConceptQuestionDetailActivity(question)// 질문 상세 보기 페이지로 이동
-            }
-        })
-        binding.tabMyAnswerResultRv.adapter = tabConceptAnswerAdapter
-        binding.tabMyAnswerResultRv.layoutManager = LinearLayoutManager(context, LinearLayoutManager.VERTICAL,false)
-    }
-
-    private fun startConceptQuestionDetailActivity(question: Question){
-        val intent = Intent(requireContext(), QuestionDetailActivity::class.java)
-        intent.putExtra("bigCategoryName", question.bigCategoryName) // 상위 카테고리명 넘김
-        intent.putExtra("questionIdx", question.questionIdx) // 질문 고유 번호 넘김
-        intent.putExtra("type", 2)  // 개념 질문
-        startActivity(intent)
-    }
-
-    private fun checkCodingAdopted() {
-        // 채택된 글만 보기
-        binding.tabMyAnswerAdoptLy.setOnClickListener {
-            isAdopted = !isAdopted
-
-            if(isAdopted){ // 채택됨
-                binding.tabMyAnswerAdoptIv.setImageResource(R.drawable.ic_check_ok)
-            }else{
-                binding.tabMyAnswerAdoptIv.setImageResource(R.drawable.ic_check_no)
-            }
-
-            getTabCodingAnswer(jwt, userIdx, isAdopted)
-        }
-    }
-
-    private fun checkConceptAdopted() {
-        // 채택된 글만 보기
-        binding.tabMyAnswerAdoptLy.setOnClickListener {
-            isAdopted = !isAdopted
-
-            if(isAdopted){ // 채택됨
-                binding.tabMyAnswerAdoptIv.setImageResource(R.drawable.ic_check_ok)
-            }else{
-                binding.tabMyAnswerAdoptIv.setImageResource(R.drawable.ic_check_no)
-            }
-
-            getTabConceptAnswer(jwt, userIdx, isAdopted)
-        }
-    }
-
-    private fun getTabCodingAnswer(jwt: String, userIdx: Long, isAdopted: Boolean){
-        val tabCodingAnswerService = TabService()
-        tabCodingAnswerService.setTabCodingAnswerService(this)
-
-        tabCodingAnswerService.getTabCodingAnswers(jwt, userIdx, isAdopted)
-    }
-
-    override fun onGetCodingAnswersLoading() {
-        binding.tabMyAnswerLoadingPb.visibility = View.VISIBLE
-        Log.d("TabAnswer/Coding/API","로딩중...")
-    }
-
-    override fun onGetCodingAnswersSuccess(result: ArrayList<Question>?) {
-        binding.tabMyAnswerLoadingPb.visibility = View.GONE
-        Log.d("TabAnswer/Coding/API","성공")
-        if (result != null) { // 해당 카테고리에 대한 질문이 있을때 어댑터에 추가
-            tabAnswerAdapter.addTabAnswers(result)
-        }
-    }
-
-    override fun onGetCodingAnswersFailure(code: Int, message: String) {
-        binding.tabMyAnswerLoadingPb.visibility = View.GONE
-        when(code){
-            400-> Log.d("TabAnswer/Coding/API", message)
-        }
-    }
-
-    private fun getTabConceptAnswer(jwt: String, userIdx: Long, isAdopted: Boolean){
-        val tabConceptAnswerService = TabService()
-        tabConceptAnswerService.setTabConceptAnswerService(this)
-
-        tabConceptAnswerService.getTabConceptAnswers(jwt, userIdx, isAdopted)
-    }
-
-    override fun onGetConceptAnswersLoading() {
-        binding.tabMyAnswerLoadingPb.visibility = View.VISIBLE
-        Log.d("TabAnswer/Concept/API","로딩중...")
-    }
-
-    override fun onGetConceptAnswersSuccess(result: ArrayList<Question>?) {
-        binding.tabMyAnswerLoadingPb.visibility = View.GONE
-        Log.d("TabAnswer/Concept/API","성공")
-        if (result != null) { // 해당 카테고리에 대한 질문이 있을때 어댑터에 추가
-            tabConceptAnswerAdapter.addTabAnswers(result)
-        }
-    }
-
-    override fun onGetConceptAnswersFailure(code: Int, message: String) {
-        binding.tabMyAnswerLoadingPb.visibility = View.GONE
-        when(code){
-            400-> Log.d("TabAnswer/Concept/API", message)
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ScrapRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ScrapRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/ScrapRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ScrapRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,25 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.*
-
-// 저장한 질문 보기
-interface ScrapRetrofitInterface {
-    @GET("/scraps/coding/?")  // 코딩 질문
-    fun getScrapCodingQuestions(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isReplied") isReplied: Boolean, // 답변 달린 질문만 보기 (true) / 전체 질문 보기 (false)
-        @Query("bigCategory") bigCategory: String?,  // 상위 카테고리, 빈 값 가능
-        @Query("smallCategory") smallCategory: String?,  // 하위 카테고리, 빈 값 가능
-    ):Call<ScrapResponse>
-
-    @GET("/scraps/concept/?")  // 검색 질문
-    fun getScrapConceptQuestions(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isReplied") isReplied: Boolean, // 답변 달린 질문만 보기 (true) / 전체 질문 보기 (false)
-        @Query("bigCategory") bigCategory: String?,  // 상위 카테고리, 빈 값 가능
-        @Query("smallCategory") smallCategory: String?,  // 하위 카테고리, 빈 값 가능
-    ):Call<ScrapResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/LikeQuestionResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/LikeQuestionResponse.kt b/app/src/main/java/com/example/mumulcom/LikeQuestionResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/LikeQuestionResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,4 +0,0 @@
-package com.example.mumulcom
-
-class LikeQuestionResponse {
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/RecentQuestionView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/RecentQuestionView.kt b/app/src/main/java/com/example/mumulcom/RecentQuestionView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/RecentQuestionView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,9 +0,0 @@
-package com.example.mumulcom
-
-
-// 최근 질문 4개 에 대한 interface (HomeFragment에서 사용)
-interface RecentQuestionView {
-    fun onGetQuestionsLoading()
-    fun onGetQuestionsSuccess(result: ArrayList<Question>?)
-    fun onGetQuestionsFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/AlarmService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/AlarmService.kt b/app/src/main/java/com/example/mumulcom/AlarmService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/AlarmService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,40 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-class AlarmService {
-    private lateinit var alarmView: AlarmView
-
-    // 외부 접근
-    fun setAlarmService(alarmView: AlarmView){
-        this.alarmView = alarmView
-    }
-
-    // 서버에서 alarm 정보 가져오기
-    fun getAlarms(jwt: String, userIdx: Long){
-        val alarmService = getRetrofit().create(AlarmRetrofitInterface::class.java)
-
-        alarmView.onGetAlarmLoading()
-
-        alarmService.getAlarms(jwt, userIdx)
-            .enqueue(object :retrofit2.Callback<AlarmResponse>{
-                override fun onResponse(call: Call<AlarmResponse>, response: Response<AlarmResponse>) {
-
-                    val resp = response.body()!!
-
-                    when(resp.code){
-                        1000-> alarmView.onGetAlarmSuccess(resp.result)
-                        else-> alarmView.onGetAlarmFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<AlarmResponse>, t: Throwable) {
-                    alarmView.onGetAlarmFailure(400,"네트워크 오류가 발생했습니다.")
-                }
-
-            })
-    }
-}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_launcher_background.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/ic_launcher_background.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,170 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="108"
-    android:viewportHeight="108">
-    <path
-        android:fillColor="#3DDC84"
-        android:pathData="M0,0h108v108h-108z" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M9,0L9,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,0L19,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,0L29,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,0L39,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,0L49,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,0L59,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,0L69,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,0L79,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M89,0L89,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M99,0L99,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,9L108,9"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,19L108,19"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,29L108,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,39L108,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,49L108,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,59L108,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,69L108,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,79L108,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,89L108,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,99L108,99"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,29L89,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,39L89,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,49L89,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,59L89,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,69L89,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,79L89,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,19L29,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,19L39,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,19L49,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,19L59,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,19L69,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,19L79,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-</vector>
Index: app/src/main/java/com/example/mumulcom/SignUpNicknameResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SignUpNicknameResponse.kt b/app/src/main/java/com/example/mumulcom/SignUpNicknameResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SignUpNicknameResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class SignUpNicknameResponse (
-    @SerializedName("isSuccess") val isSuccess: Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: Boolean,
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/QuestionService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/QuestionService.kt b/app/src/main/java/com/example/mumulcom/QuestionService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/QuestionService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,49 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-
-
-// 이 클래스를 사용해서 질문 리스트를 받아올수 있음.
-class QuestionService {
-    private lateinit var recentQuestionView: RecentQuestionView
-
-    // 외부 접근
-    fun setRecentQuestionView(recentQuestionView: RecentQuestionView){
-        this.recentQuestionView = recentQuestionView
-    }
-
-    fun getQuestions(userIdx:Long, X_ACCESS_TOKEN:String) {
-        val questionService = getRetrofit().create(QuestionRetrofitInterface::class.java)
-        // val callResponse: Call<QuestionResponse> = questionService.getQuestions(userIdx)
-
-        recentQuestionView.onGetQuestionsLoading()
-
-        questionService.getQuestions(userIdx,X_ACCESS_TOKEN ).enqueue(object : retrofit2.Callback<QuestionResponse>{
-            override fun onResponse(call: Call<QuestionResponse>, response: Response<QuestionResponse>) {
-
-                val resp = response.body()!!
-
-                when(resp.code){
-                    1000->{ recentQuestionView.onGetQuestionsSuccess(resp.result)
-                        Log.d("HomeFragment/API","성공")}
-//                    1000-> recentQuestionView.onGetQuestionsSuccess(null)
-                    else -> recentQuestionView.onGetQuestionsFailure(resp.code,resp.message)
-
-                }
-
-            }
-
-            override fun onFailure(call: Call<QuestionResponse>, t: Throwable) { // 네트워크 응답 실패시
-                recentQuestionView.onGetQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-
-            }
-
-        })
-
-    }
-
-
-}// end of Class
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/TabRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,37 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.*
-
-interface TabRetrofitInterface {
-
-    // 내가 한 질문 보기
-    @GET("/questions/my/coding/?")  // 코딩 질문
-    fun getTabCodingQuestions(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isReplied") isReplied: Boolean, // 답변 달린 질문만 보기 (true) / 전체 질문 보기 (false)
-    ):Call<TabResponse>
-
-    @GET("/questions/my/concept/?")  // 검색 질문
-    fun getTabConceptQuestions(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isReplied") isReplied: Boolean, // 답변 달린 질문만 보기 (true) / 전체 질문 보기 (false)
-    ):Call<TabResponse>
-
-    // 내가 단 답변 보기
-    @GET("/replies/my/coding/?")  // 코딩 질문
-    fun getTabCodingAnswers(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isAdopted") isAdopted: Boolean, // 채택된 질문만 보기 (true) / 전체 질문 보기 (false)
-    ): Call<TabResponse>
-
-    @GET("/replies/my/concept/?")  // 검색 질문
-    fun getTabConceptAnswers(
-        @Header("X-ACCESS-TOKEN") jwt : String, // jwt
-        @Query("userIdx") userIdx: Long,    //유저 식별자
-        @Query("isAdopted") isAdopted: Boolean, // 채택된 질문만 보기 (true) / 전체 질문 보기 (false)
-    ): Call<TabResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ConceptQuestionResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ConceptQuestionResponse.kt b/app/src/main/java/com/example/mumulcom/ConceptQuestionResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ConceptQuestionResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class ConceptQuestionResponse(
-    @SerializedName("isSuccess") val isSuccess: Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<ConceptQuestion>?
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/DetailCodingQuestionResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/DetailCodingQuestionResponse.kt b/app/src/main/java/com/example/mumulcom/DetailCodingQuestionResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/DetailCodingQuestionResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-class DetailCodingQuestionResponse (
-    @SerializedName("isSuccess") val isSuccess: Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<DetailCodingQuestion>
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SearchRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SearchRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/SearchRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SearchRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,21 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.GET
-import retrofit2.http.Header
-import retrofit2.http.Path
-import retrofit2.http.Query
-
-// 검색 결과를 서버에서 받아옴
-interface SearchRetrofitInterface {
-    @GET("/questions/search/coding") // 코딩 질문 검색
-    fun getCodingQuestions(
-        @Query("keyword") type: String?,   // 검색어
-    ): Call<CodingQuestionResponse>
-
-
-    @GET("/questions/search/concept") // 개념 질문 검색
-    fun getConceptQuestions(
-        @Query("keyword") type: String?,   // 검색어
-    ): Call<ConceptQuestionResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/CodingQuestionAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/CodingQuestionAdapter.kt b/app/src/main/java/com/example/mumulcom/CodingQuestionAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/CodingQuestionAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,74 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import android.content.Context
-import com.example.mumulcom.databinding.QuestionSearchListItemBinding
-
-class CodingQuestionAdapter(var context: Context)
-    :RecyclerView.Adapter<CodingQuestionAdapter.CodingQuestionViewHolder>() {
-
-    private val codingQuestionList = ArrayList<CodingQuestion>()
-
-    // 클릭 인터페이스 정의
-    interface CodingQuestionClickListener{
-        fun onItemClick(codingQuestion: CodingQuestion)
-    }
-
-    // 리스너 객체를 전달받는 함수랑 리스너 객체를 저장할 변수
-    private lateinit var codingQuestionClickListener : CodingQuestionAdapter.CodingQuestionClickListener
-
-    fun setCodingQuestionClickListener(codingQuestionClickListener: CodingQuestionAdapter.CodingQuestionClickListener){
-        this.codingQuestionClickListener = codingQuestionClickListener
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CodingQuestionAdapter.CodingQuestionViewHolder {
-        val binding:QuestionSearchListItemBinding = QuestionSearchListItemBinding.inflate(LayoutInflater.from(parent.context),parent,false)
-        return CodingQuestionViewHolder(binding)
-    }
-
-    override fun onBindViewHolder(holder: CodingQuestionAdapter.CodingQuestionViewHolder, position: Int) {
-        holder.bind(codingQuestionList[position])
-        //recyclerView 의 각 아이템을 클릭할때
-        holder.itemView.setOnClickListener {
-            codingQuestionClickListener.onItemClick(codingQuestionList[position])
-        }
-    }
-
-    override fun getItemCount(): Int {
-        return codingQuestionList.size
-    }
-
-    @SuppressLint("NotifyDataSetChanged")
-    fun addCodingQuestions(codingQuestions:ArrayList<CodingQuestion>){
-        this.codingQuestionList.clear()
-        this.codingQuestionList.addAll(codingQuestions)
-
-        notifyDataSetChanged()
-    }
-
-    inner class CodingQuestionViewHolder(val binding: QuestionSearchListItemBinding):RecyclerView.ViewHolder(binding.root){
-
-        // # 문자열 바로 사용해서 추가함
-        @SuppressLint("SetTextI18n")
-        fun bind(codingQuestion: CodingQuestion) {
-            Glide.with(context).load(codingQuestion.profileImgUrl).into(binding.searchItemProfileIv);
-            binding.searchItemNicknameTv.text = codingQuestion.nickname
-            binding.searchItemDateTv.text = codingQuestion.createdAt
-            binding.searchItemTitleTv.text = codingQuestion.title
-            binding.searchItemContentTv.text = codingQuestion.currentError
-            if(codingQuestion.bigCategoryName!=null){
-                binding.searchItemTag1Tv.text = "#"+codingQuestion.bigCategoryName
-            }
-            if(codingQuestion.smallCategoryName!=null){
-                binding.searchItemTag2Tv.text = "#"+codingQuestion.smallCategoryName
-            }
-            binding.searchItemCommentTv.text = codingQuestion.replyCount.toString()
-            binding.searchItemLikeTv.text = codingQuestion.likeCount.toString()
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/DetailConceptQuestionService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/DetailConceptQuestionService.kt b/app/src/main/java/com/example/mumulcom/DetailConceptQuestionService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/DetailConceptQuestionService.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,48 +0,0 @@
-package com.example.mumulcom
-
-import android.util.Log
-import retrofit2.Call
-import retrofit2.Response
-
-class DetailConceptQuestionService {
-    private lateinit var detailConceptQuestionView: DetailConceptQuestionView // 선언
-
-    // 외부 접근
-    fun setDetailConceptQuestionService(detailConceptQuestionView: DetailConceptQuestionView){
-        this.detailConceptQuestionView = detailConceptQuestionView
-    }
-
-    // 서버에서 해당 (개념) 질문에 대한 상세 내용 받아오는 함수
-    fun getDetailConceptQuestion(questionIdx:Long,userIdx:Long){
-        val detailConceptQuestionService = getRetrofit().create(QuestionRetrofitInterface::class.java)
-
-        detailConceptQuestionView.onGetDetailConceptQuestionsLoading() // 호출전
-
-        detailConceptQuestionService.getDetailConceptQuestion(questionIdx,userIdx)
-            .enqueue(object : retrofit2.Callback<DetailConceptQuestionResponse>{
-                override fun onResponse(call: Call<DetailConceptQuestionResponse>, response: Response<DetailConceptQuestionResponse>) {
-                    // 호출 성공
-                    Log.d("DetailConceptQuestionService/API","호출")
-                    val resp = response.body()!!
-                    when(resp.code){
-                        1000->{
-                            detailConceptQuestionView.onGetDetailConceptQuestionsSuccess(resp.result!!)
-                            Log.d("DetailConceptQuestionService/API","성공")
-                        }else->
-                        detailConceptQuestionView.onGetDetailConceptQuestionsFailure(resp.code,resp.message)
-                    }
-
-                }
-
-                override fun onFailure(call: Call<DetailConceptQuestionResponse>, t: Throwable) {
-                    // 호출 실패
-                    detailConceptQuestionView.onGetDetailConceptQuestionsFailure(400,"네트워크 오류가 발생했습니다.")
-
-                }
-
-            })
-    }
-
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/Select.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/Select.kt b/app/src/main/java/com/example/mumulcom/Select.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/Select.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,6 +0,0 @@
-package com.example.mumulcom
-
-data class Select(
-    var select:String? ="",
-    var selectImg: Int?=null,
-)
\ No newline at end of file
Index: app/src/main/res/drawable-v24/ic_launcher_foreground.xml
===================================================================
diff --git a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml b/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
deleted file mode 100644
--- a/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,30 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:aapt="http://schemas.android.com/aapt"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="108"
-    android:viewportHeight="108">
-    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
-        <aapt:attr name="android:fillColor">
-            <gradient
-                android:endX="85.84757"
-                android:endY="92.4963"
-                android:startX="42.9492"
-                android:startY="49.59793"
-                android:type="linear">
-                <item
-                    android:color="#44000000"
-                    android:offset="0.0" />
-                <item
-                    android:color="#00000000"
-                    android:offset="1.0" />
-            </gradient>
-        </aapt:attr>
-    </path>
-    <path
-        android:fillColor="#FFFFFF"
-        android:fillType="nonZero"
-        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
-        android:strokeWidth="1"
-        android:strokeColor="#00000000" />
-</vector>
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SignUpRetrofitInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SignUpRetrofitInterface.kt b/app/src/main/java/com/example/mumulcom/SignUpRetrofitInterface.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SignUpRetrofitInterface.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,12 +0,0 @@
-package com.example.mumulcom
-
-import retrofit2.Call
-import retrofit2.http.Body
-import retrofit2.http.GET
-import retrofit2.http.POST
-import retrofit2.http.Query
-
-interface SignUpRetrofitInterface {
-    @POST("/users")  // 회원 가입
-    fun signUp(@Body user: User): Call<SignUpResponse>
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/LoginView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/LoginView.kt b/app/src/main/java/com/example/mumulcom/LoginView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/LoginView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,7 +0,0 @@
-package com.example.mumulcom
-
-interface LoginView {
-    fun onLoginLoading()
-    fun onLoginSuccess(auth: Auth)
-    fun onLoginFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/Login.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/Login.kt b/app/src/main/java/com/example/mumulcom/Login.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/Login.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,8 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-// 로그인
-data class Login(
-    @SerializedName("email") var email: String,  // 유저 이메일
-)
Index: app/src/main/java/com/example/mumulcom/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ProfileFragment.kt b/app/src/main/java/com/example/mumulcom/ProfileFragment.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ProfileFragment.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,24 +0,0 @@
-package com.example.mumulcom
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.fragment.app.Fragment
-import com.example.mumulcom.databinding.FragmentProfileBinding
-
-
-class ProfileFragment : Fragment() {
-
-    lateinit var binding: FragmentProfileBinding
-
-    override fun onCreateView(
-        inflater: LayoutInflater,
-        container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View {
-        binding = FragmentProfileBinding.inflate(inflater, container, false)
-        return binding.root
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ConceptQuestion.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ConceptQuestion.kt b/app/src/main/java/com/example/mumulcom/ConceptQuestion.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ConceptQuestion.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,16 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class ConceptQuestion(
-    @SerializedName("questionIdx") var questionIdx: Long,   // 질문 인덱스
-    @SerializedName("profileImgUrl") var profileImgUrl: String, // 유저 프로필 이미지 url
-    @SerializedName("nickname") var nickname: String,   // 유저 닉네임
-    @SerializedName("bigCategoryName") var bigCategoryName: String?, // 상위 카테고리, null 가능
-    @SerializedName("smallCategoryName") var smallCategoryName: String?, // 하위 카테고리, null 가능
-    @SerializedName("title") var title: String, // 질문 제목
-    @SerializedName("createdAt") var createdAt: String, // 질문 작성 일자
-    @SerializedName("content") var content: String, // 질문 내용
-    @SerializedName("likeCount") var likeCount: Int,    // 질문 좋아요 개수
-    @SerializedName("replyCount") var replyCount: Int,  // 질문 답변 개수
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ScrapCodingView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ScrapCodingView.kt b/app/src/main/java/com/example/mumulcom/ScrapCodingView.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ScrapCodingView.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,7 +0,0 @@
-package com.example.mumulcom
-
-interface ScrapCodingView {
-    fun onGetScrapCodingLoading()
-    fun onGetScrapCodingSuccess(result: ArrayList<Question>?)
-    fun onGetScrapCodingFailure(code:Int, message:String)
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/RepliesForQuestionResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/RepliesForQuestionResponse.kt b/app/src/main/java/com/example/mumulcom/RepliesForQuestionResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/RepliesForQuestionResponse.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,10 +0,0 @@
-package com.example.mumulcom
-
-import com.google.gson.annotations.SerializedName
-
-data class RepliesForQuestionResponse(
-    @SerializedName("isSuccess") val isSuccess : Boolean,
-    @SerializedName("code") val code:Int,
-    @SerializedName("message") val message:String,
-    @SerializedName("result") val result: ArrayList<Reply>
-)
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/ScrapAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/ScrapAdapter.kt b/app/src/main/java/com/example/mumulcom/ScrapAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/ScrapAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,72 +0,0 @@
-package com.example.mumulcom
-
-import android.annotation.SuppressLint
-import android.content.Context
-import android.view.LayoutInflater
-import android.view.ViewGroup
-import androidx.recyclerview.widget.RecyclerView
-import com.bumptech.glide.Glide
-import com.example.mumulcom.databinding.QuestionListItemBinding
-
-class ScrapAdapter(var context: Context?)
-    : RecyclerView.Adapter<ScrapAdapter.ScrapViewHolder>() {
-
-    private val questionList = ArrayList<Question>()
-
-    // 클릭 인터페이스 정의
-    interface ScrapClickListener{
-        fun onItemClick(question: Question)
-    }
-
-    // 리스너 객체를 전달받는 함수랑 리스너 객체를 저장할 변수
-    private lateinit var scrapClickListener : ScrapAdapter.ScrapClickListener
-
-    fun setScrapClickListener(scrapClickListener: ScrapAdapter.ScrapClickListener){
-        this.scrapClickListener = scrapClickListener
-    }
-
-    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ScrapViewHolder {
-        val binding:QuestionListItemBinding = QuestionListItemBinding.inflate(LayoutInflater.from(parent.context),parent,false)
-        return ScrapViewHolder(binding)
-    }
-
-    override fun onBindViewHolder(holder: ScrapAdapter.ScrapViewHolder, position: Int) {
-        holder.bind(questionList[position])
-        //recyclerView 의 각 아이템을 클릭할때
-        holder.itemView.setOnClickListener {
-            scrapClickListener.onItemClick(questionList[position])
-        }
-    }
-
-    override fun getItemCount(): Int {
-        return questionList.size
-    }
-
-    @SuppressLint("NotifyDataSetChanged")
-    fun addScrap(question:ArrayList<Question>){
-        this.questionList.clear()
-        this.questionList.addAll(question)
-
-        notifyDataSetChanged()
-    }
-
-    inner class ScrapViewHolder(val binding: QuestionListItemBinding):RecyclerView.ViewHolder(binding.root){
-        // # 문자열 바로 사용해서 추가함
-        @SuppressLint("SetTextI18n")
-        fun bind(question: Question) {
-            context?.let { Glide.with(it).load(question.profileImgUrl).into(binding.itemIconIv) }
-            binding.itemNameTv.text = question.nickname
-            binding.itemDateTv.text = question.createdAt
-            binding.itemTitleTv.text = question.title
-            if(question.bigCategoryName!=null){
-                binding.itemBigCategoryTv.text = "#" + question.bigCategoryName
-            }
-            if(question.smallCategoryName!=null){
-                binding.itemSmallCategoryTv.text = "#" + question.smallCategoryName
-            }
-            binding.itemCommentTv.text = question.replyCount.toString()
-            binding.itemLikeTv.text = question.likeCount.toString()
-        }
-
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/AnswerCameraShootingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/AnswerCameraShootingActivity.kt b/app/src/main/java/com/example/mumulcom/AnswerCameraShootingActivity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/AnswerCameraShootingActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,283 +0,0 @@
-package com.example.mumulcom
-
-import android.Manifest
-import android.animation.ValueAnimator
-import android.app.Activity
-import android.content.Intent
-import android.content.pm.PackageManager
-import android.graphics.Bitmap
-import android.graphics.ImageDecoder
-import android.graphics.Matrix
-import android.media.ExifInterface
-import android.net.Uri
-import android.os.Build
-import android.os.Bundle
-import android.provider.MediaStore
-import android.util.DisplayMetrics
-import android.util.Log
-import android.view.View
-import android.widget.Toast
-import androidx.activity.result.ActivityResultLauncher
-import androidx.appcompat.app.AppCompatActivity
-import androidx.core.app.ActivityCompat
-import androidx.core.content.ContextCompat
-import com.example.mumulcom.databinding.ActivityAnswercamerashootingBinding
-import com.example.mumulcom.databinding.ActivityCodingcamerashootingBinding
-import java.io.File
-import java.text.SimpleDateFormat
-import androidx.core.content.FileProvider
-import java.io.FileOutputStream
-import java.io.OutputStream
-import java.util.*
-
-
-class AnswerCameraShootingActivity:AppCompatActivity() {
-    lateinit var binding: ActivityAnswercamerashootingBinding
-
-    private lateinit var getResultText: ActivityResultLauncher<Intent>
-
-    var imageName // 카메라로 찍은 사진 이름
-            : String? = null
-    var imageUri // 카메라로 찍은 사진 Uri
-            : Uri? = null
-
-    // Permisisons
-    val PERMISSIONS = arrayOf(
-        Manifest.permission.CAMERA,
-        Manifest.permission.WRITE_EXTERNAL_STORAGE,
-        Manifest.permission.READ_EXTERNAL_STORAGE
-    )
-    val PERMISSIONS_REQUEST = 100
-    val REQUEST_IMAGE_CAPTURE = 1
-
-    // Request Code
-    private val BUTTON1 = 100
-    private val BUTTON3 = 300
-
-    // 원본 사진이 저장되는 Uri
-    private var photoUri: Uri? = null
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        binding = ActivityAnswercamerashootingBinding.inflate(layoutInflater)
-        val view = binding.root
-        setContentView(view)
-
-        checkPermissions(PERMISSIONS, PERMISSIONS_REQUEST)
-
-        binding.answercameraCamerashootingCheckIb.setOnClickListener {
-            startActivity(Intent(this, AnswerActivity::class.java))
-        }
-
-        //카메라버튼
-        binding.answercameraCamerashootingCameraIv.setOnClickListener {
-            val takePictureIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
-            val photoFile = File(
-                File("${filesDir}/image").apply{
-                    if(!this.exists()){
-                        this.mkdir();
-
-                    }
-                },
-                newJpgFileName()
-            )
-            photoUri = FileProvider.getUriForFile(
-                this,
-                "com.example.mumulcom.fileprovider",
-                photoFile
-            )
-            takePictureIntent.resolveActivity(packageManager)?.also{
-                takePictureIntent.putExtra("uri", photoUri)
-                startActivityForResult(takePictureIntent, BUTTON1)
-            }
-            Log.d("uri", photoUri.toString())
-            //체크버튼
-            binding.answercameraCamerashootingCheckIb.setOnClickListener {
-                val intent = Intent(this@AnswerCameraShootingActivity, AnswerActivity::class.java)
-                takePictureIntent.resolveActivity(packageManager)?.also{
-                    takePictureIntent.putExtra("uri", photoUri)
-                }
-                startActivity(intent)
-            }
-        }
-
-
-
-        //앨범버튼
-        //체크버튼
-//        binding.camerashootingCheckIb.setOnClickListener {
-//            val takePictureIntent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
-//            val photoFile = File(
-//                File("${filesDir}/image").apply{
-//                    if(!this.exists()){
-//                        this.mkdirs()
-//                    }
-//                },
-//                newJpgFileName()
-//            )
-//            photoUri = FileProvider.getUriForFile(
-//                this,
-//                "com.example.mumulcom.fileprovider",
-//                photoFile
-//            )
-//            takePictureIntent.resolveActivity(packageManager)?.also{
-//                takePictureIntent.putExtra("uri", photoUri)
-//                startActivityForResult(takePictureIntent, BUTTON1)
-//            }
-//            val intent = Intent(this@CodingCameraShootingActivity, CheckCodingQuestionActivity::class.java)
-//            startActivity(intent)
-//        }
-//        MediaStore.EXTRA_OUTPUT
-
-        binding.answercameraCamerashootingBackIb.setOnClickListener {
-            startActivity(Intent(this, AnswerActivity::class.java))
-        }
-
-        // 화면이 만들어 지면서 정장소 권한을 체크 합니다.
-        // 권한이 승인되어 있으면 카메라를 호출하는 메소드를 실행합니다.
-        if (checkPermissions(PERMISSIONS, PERMISSIONS_REQUEST)) {
-            //사진 회전시키기
-            val imageView=binding.ivPre
-            val currentRotation=imageView.rotation
-            val currentImageViewHeight = imageView.height
-            val displayMetrics = DisplayMetrics()
-            val deviceWidth=displayMetrics.widthPixels
-            val deviceHeight=displayMetrics.heightPixels
-
-
-            val  heightGap= if (currentImageViewHeight>deviceWidth){
-                deviceWidth-currentImageViewHeight
-            }else{
-                deviceHeight - currentImageViewHeight
-            }
-
-            if (currentRotation%90==0.toFloat()){
-
-                ValueAnimator.ofFloat(0f, 1f).apply {
-                    duration=500
-                    addUpdateListener {
-                        val animatedValue = it.animatedValue as Float
-                        imageView.run{
-                            layoutParams.height=
-                                currentImageViewHeight+(heightGap * animatedValue)
-                                    .toInt()
-                            rotation=currentRotation+90*animatedValue
-                            requestLayout()
-                        }
-                    }
-                }.start()
-            }
-        }
-
-    }
-    //사진 각도 반환 함수
-    fun exifOrientationToDegrees(exifOrientation: Int): Int {
-        if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_90) {
-            return 90
-        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_180) {
-            return 180
-        } else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_270) {
-            return 270
-        }
-        return 0
-    }
-
-    // 이미지 회전 함수
-    private fun rotate(bitmap: Bitmap, degree: Int) : Bitmap {
-        val matrix = Matrix()
-        matrix.postRotate(degree.toFloat())
-        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.width, bitmap.height, matrix,true)
-    }
-
-
-    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
-        super.onActivityResult(requestCode, resultCode, data)
-        if (resultCode == Activity.RESULT_OK) {
-            when (requestCode) {
-                BUTTON1 -> {
-                    val imageBitmap = photoUri?.let {
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
-                            ImageDecoder.createSource(this.contentResolver, it)
-                        } else {
-                            @Suppress("DEPRECATION")
-                            MediaStore.Images.Media.getBitmap(contentResolver, photoUri)
-                        }
-                    }
-                    binding.ivPre.setImageBitmap(imageBitmap?.let {
-                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
-                            ImageDecoder.decodeBitmap(it as ImageDecoder.Source)
-                        } else {
-                            @Suppress("DEPRECATION")
-                            MediaStore.Images.Media.getBitmap(contentResolver, photoUri)
-                        }
-                    })
-                    Toast.makeText(this, photoUri?.path, Toast.LENGTH_LONG).show()
-                    binding.answercameraCamerashootingCheckIb.setOnClickListener {
-                        val intent=Intent(this, AnswerActivity::class.java)
-                        intent.putExtra("photoUri", photoUri)
-                        startActivity(intent)
-                        finish()
-                        Log.d("a1", photoUri.toString())
-
-                    }
-                }
-            }
-        }
-    }
-
-
-    //권한이 있는지 체크하는 메소드
-    private fun checkPermissions(permissions: Array<String>, permissionsRequest: Int): Boolean {
-        val permissionList : MutableList<String> = mutableListOf()
-        for(permission in permissions){
-            val result = ContextCompat.checkSelfPermission(this, permission)
-            if(result != PackageManager.PERMISSION_GRANTED){
-                permissionList.add(permission)
-            }
-        }
-        if(permissionList.isNotEmpty()){
-            ActivityCompat.requestPermissions(this, permissionList.toTypedArray(), PERMISSIONS_REQUEST)
-            return false
-        }
-        return true
-    }
-
-    override fun onRequestPermissionsResult(
-        requestCode: Int,
-        permissions: Array<out String>,
-        grantResults: IntArray
-    ) {
-        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
-        for(result in grantResults){
-            if(result != PackageManager.PERMISSION_GRANTED){
-                Toast.makeText(this, "권한 승인 부탁드립니다.", Toast.LENGTH_SHORT).show()
-                finish()
-            }
-        }
-    }
-
-    //Bitmap 데이터를 비트맵 파일로 저장하는 함수
-    // +newFileName() 메서드는 파일 이름 중복 제거를 위해 시간을 사용한 파일명을 생성하는 메서드
-    private fun newJpgFileName() : String {
-        val sdf = SimpleDateFormat("yyyyMMdd_HHmmss")
-        val filename = sdf.format(System.currentTimeMillis())
-        return "${filename}.jpg"
-    }
-    private fun saveBitmapAsJPGFile(bitmap: Bitmap) {
-        val path = File(filesDir, "image")
-        if(!path.exists()){
-            path.mkdirs()
-        }
-        val file = File(path, newJpgFileName())
-        var imageFile: OutputStream? = null
-        try{
-            file.createNewFile()
-            imageFile = FileOutputStream(file)
-            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, imageFile)
-            imageFile.close()
-            Toast.makeText(this, file.absolutePath, Toast.LENGTH_LONG).show()
-        }catch (e: Exception){
-            null
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/TabAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/TabAdapter.kt b/app/src/main/java/com/example/mumulcom/TabAdapter.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/TabAdapter.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,17 +0,0 @@
-package com.example.mumulcom
-
-import androidx.fragment.app.Fragment
-import androidx.viewpager2.adapter.FragmentStateAdapter
-
-class TabAdapter(fragment: Fragment) : FragmentStateAdapter(fragment) {
-
-    override fun getItemCount(): Int = 2
-
-    override fun createFragment(position: Int): Fragment {
-        return when(position) {
-            0 -> TabQuestionFragment()  // 내가 한 질문
-            else -> TabAnswerFragment() // 내가 단 답변
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/mumulcom/SearchActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/SearchActivity.kt b/app/src/main/java/com/example/mumulcom/SearchActivity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/mumulcom/SearchActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ /dev/null	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
@@ -1,277 +0,0 @@
-package com.example.mumulcom
-
-import android.content.Context
-import android.content.Intent
-import android.os.Bundle
-import android.util.Log
-import android.view.View
-import android.view.inputmethod.InputMethodManager
-import android.widget.Toast
-import androidx.appcompat.app.AppCompatActivity
-import androidx.appcompat.widget.SearchView
-import androidx.recyclerview.widget.LinearLayoutManager
-import com.example.mumulcom.databinding.ActivitySearchBinding
-import kotlin.collections.ArrayList
-
-// TODO 처음 리사이클러뷰 (initRecyclerView) 살짝 로딩있음 -> 성능 개선 방법 찾기
-class SearchActivity : AppCompatActivity(), SearchCodingQuestionView, SearchConceptQuestionView {
-    lateinit var binding: ActivitySearchBinding
-
-    private var keyword: String? = null
-
-    private var matchedCodingQuestion: ArrayList<CodingQuestion> = arrayListOf()    // keyword와 일치하는 데이터
-    private lateinit var codingQuestionAdapter: CodingQuestionAdapter
-
-    private var matchedConceptQuestion: ArrayList<ConceptQuestion> = arrayListOf()  // keyword와 일치하는 데이터
-    private lateinit var conceptQuestionAdapter: ConceptQuestionAdapter
-
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        binding = ActivitySearchBinding.inflate(layoutInflater)
-        setContentView(binding.root)
-
-        // default값은 코딩 질문
-        initCodingRecyclerView()
-        codingPerformSearch()
-
-        binding.searchRadioGroup.setOnCheckedChangeListener { group, checkedId ->
-            when(checkedId) {
-                R.id.search_coding_btn -> {
-                    initCodingRecyclerView()
-                    codingPerformSearch()
-                }
-                R.id.search_concept_btn -> {
-                    initConceptRecyclerView()
-                    conceptPerformSearch()
-                }
-            }
-        }
-
-        // 화면 배경 누르면 키보드 사라지기
-        binding.searchLy.setOnClickListener {
-            CloseKeyboard()
-        }
-
-        // 뒤로가기 버튼 누르기
-        binding.searchBackIv.setOnClickListener {
-            onBackPressed()
-        }
-
-
-    }
-
-    // 키보드 사라지는 함수
-    fun CloseKeyboard() {
-        var view = this.currentFocus
-
-        if(view != null) {
-            val inputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
-            inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
-        }
-    }
-
-    // 리사이클러뷰에 코딩 질문 데이터와 어댑터 적용
-    private fun initCodingRecyclerView() {
-        // 처음에는 검색 키워드 값 null
-        getCodingQuestions(keyword)
-        codingQuestionAdapter = CodingQuestionAdapter(this)
-        codingQuestionAdapter.setCodingQuestionClickListener(object: CodingQuestionAdapter.CodingQuestionClickListener{
-            override fun onItemClick(codingQuestion: CodingQuestion) {
-                startCodingQuestionDetailActivity(codingQuestion)// 질문 상세 보기 페이지로 이동
-            }
-        })
-        binding.searchQueryResultRv.adapter = codingQuestionAdapter
-        binding.searchQueryResultRv.layoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL,false)
-    }
-
-    private fun startCodingQuestionDetailActivity(codingQuestion: CodingQuestion){
-        val intent = Intent(this,QuestionDetailActivity::class.java)
-        intent.putExtra("bigCategoryName", codingQuestion.bigCategoryName) // 상위 카테고리명 넘김
-        intent.putExtra("questionIdx", codingQuestion.questionIdx) // 질문 고유 번호 넘김
-        intent.putExtra("type", 1)  // 코딩 질문
-        startActivity(intent)
-    }
-
-    // 리사이클러뷰에 개념 질문 데이터와 어댑터 적용
-    private fun initConceptRecyclerView() {
-        // 처음에는 검색 키워드 값 null
-        getConceptQuestions(keyword)
-        conceptQuestionAdapter = ConceptQuestionAdapter(this)
-        conceptQuestionAdapter.setConceptQuestionClickListener(object: ConceptQuestionAdapter.ConceptQuestionClickListener{
-            override fun onItemClick(conceptQuestion: ConceptQuestion) {
-                startConceptQuestionDetailActivity(conceptQuestion)// 질문 상세 보기 페이지로 이동
-            }
-        })
-        binding.searchQueryResultRv.adapter = conceptQuestionAdapter
-        binding.searchQueryResultRv.layoutManager = LinearLayoutManager(this, LinearLayoutManager.VERTICAL,false)
-    }
-
-    private fun startConceptQuestionDetailActivity(conceptQuestion: ConceptQuestion){
-        val intent = Intent(this,QuestionDetailActivity::class.java)
-        intent.putExtra("bigCategoryName", conceptQuestion.bigCategoryName) // 상위 카테고리명 넘김
-        intent.putExtra("questionIdx", conceptQuestion.questionIdx) // 질문 고유 번호 넘김
-        intent.putExtra("type", 2)  // 개념 질문
-        startActivity(intent)
-    }
-
-    private fun codingPerformSearch() {
-        binding.searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
-            override fun onQueryTextSubmit(keyword: String?): Boolean {   // 검색 버튼 클릭했을 때
-                // 자판에 있는 검색 버튼을 클릭했을때만 toast 나오게 하고 싶음
-                getCodingQuestions(keyword)
-                updateCodingRecyclerView()
-                CloseKeyboard()
-                return true
-            }
-
-            override fun onQueryTextChange(keyword: String?): Boolean { // 텍스트가 바뀌는 순간순간
-                return false
-            }
-        })
-    }
-
-    private fun conceptPerformSearch() {
-        binding.searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
-            override fun onQueryTextSubmit(keyword: String?): Boolean {   // 검색 버튼 클릭했을 때
-                // 자판에 있는 검색 버튼을 클릭했을때만 toast 나오게 하고 싶음
-                getConceptQuestions(keyword)
-                updateConceptRecyclerView()
-                CloseKeyboard()
-                return true
-            }
-
-            override fun onQueryTextChange(newText: String?): Boolean { // 텍스트가 바뀌는 순간순간
-                return false
-            }
-        })
-    }
-
-    private fun updateCodingRecyclerView() {
-        binding.searchQueryResultRv.apply {
-            codingQuestionAdapter.addCodingQuestions(matchedCodingQuestion)
-            //codingQuestionAdapter.codingQuestionList = matchedCodingQuestion
-            //codingQuestionAdapter.notifyDataSetChanged()
-        }
-    }
-
-    private fun updateConceptRecyclerView() {
-        binding.searchQueryResultRv.apply {
-            conceptQuestionAdapter.addConceptQuestions(matchedConceptQuestion)
-            //conceptQuestionAdapter.conceptQuestionList = matchedConceptQuestion
-            //conceptQuestionAdapter.notifyDataSetChanged()
-        }
-    }
-
-    private fun getCodingQuestions(keyword: String?){
-        val searchCodingQuestionService = SearchService()
-        searchCodingQuestionService.setSearchCodingQuestionView(this)
-
-        searchCodingQuestionService.getCodingQuestions(keyword)
-    }
-
-
-    override fun onGetCodingQuestionsLoading() {
-        binding.searchLoadingPb.visibility = View.VISIBLE
-        Log.d("SearchActivity/CodingQuestion/API","검색 로딩 중...")
-    }
-
-    override fun onGetCodingQuestionsSuccess(result: ArrayList<CodingQuestion>?) {
-        binding.searchLoadingPb.visibility = View.GONE
-        if (result != null) { // 검색 결과가 있으면 어댑터에 추가
-            codingQuestionAdapter.addCodingQuestions(result)
-        } else {
-            Toast.makeText(this, "검색 결과가 없습니다.", Toast.LENGTH_SHORT).show()
-        }
-    }
-
-    override fun onGetCodingQuestionsFailure(code: Int, message: String) {
-        binding.searchLoadingPb.visibility = View.GONE
-        when(code){
-            400-> Log.d("SearchActivity/CodingQuestion/API", message)
-        }
-    }
-
-    private fun getConceptQuestions(keyword:String?){
-        val searchConceptQuestionService = SearchService()
-        searchConceptQuestionService.setSearchConceptQuestionView(this)
-
-        searchConceptQuestionService.getConceptQuestions(keyword)
-    }
-
-
-    override fun onGetConceptQuestionsLoading() {
-        binding.searchLoadingPb.visibility = View.VISIBLE
-        Log.d("SearchActivity/ConceptQuestion/API","검색 로딩 중...")
-    }
-
-    override fun onGetConceptQuestionsSuccess(result: ArrayList<ConceptQuestion>?) {
-        binding.searchLoadingPb.visibility = View.GONE
-        if (result != null) { // 검색 결과가 있으면 어댑터에 추가
-            conceptQuestionAdapter.addConceptQuestions(result)
-        } else {
-            Toast.makeText(this, "검색 결과가 없습니다.", Toast.LENGTH_SHORT).show()
-        }
-    }
-
-    override fun onGetConceptQuestionsFailure(code: Int, message: String) {
-        binding.searchLoadingPb.visibility = View.GONE
-        when(code){
-            400-> Log.d("SearchActivity/ConceptQuestion/API", message)
-        }
-    }
-
-/*
-    @SuppressLint("NotifyDataSetChanged")
-    private fun initRecyclerView() {
-        questionAdapter = QuestionAdapter(question).also {
-            binding.searchQueryResultRv.adapter = it
-            binding.searchQueryResultRv.adapter!!.notifyDataSetChanged()
-        }
-    }
-
-    private fun performSearch() {
-        binding.searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
-            override fun onQueryTextSubmit(query: String?): Boolean {   // 검색 버튼 클릭했을 때
-                // 자판에 있는 검색 버튼을 클릭했을때만 toast 나오게 하고 싶음
-                // toast를 출력할건지에 대한 boolean 값을 함수에 넘겨줌
-                search(query, true)
-                return true
-            }
-
-            override fun onQueryTextChange(newText: String?): Boolean { // 텍스트가 바뀌는 순간순간
-                search(newText, false)
-                return true
-            }
-        })
-    }
-
-    private fun search(text: String?, toast: Boolean) {
-        // 1번이면 matchedQuestion에다 arrayList에 coding
-        matchedQuestion = arrayListOf()
-
-        text?.let {
-            question.forEach { question ->
-                // 질문 제목에서 일치하는 항목을 검색
-                if (question.title.contains(text))
-                    matchedQuestion.add(question)
-            }
-        }
-        // 결과 보여주기
-        updateRecyclerView()
-
-        // 검색 결과가 없다면
-        if (toast && matchedQuestion.isEmpty()) {
-            Toast.makeText(this, "검색 결과가 없습니다.", Toast.LENGTH_SHORT).show()
-        }
-        updateRecyclerView()
-    }
-
-    private fun updateRecyclerView() {
-        binding.searchQueryResultRv.apply {
-            questionAdapter.questionList = matchedQuestion
-            questionAdapter.notifyDataSetChanged()
-        }
-    }
-*/
-}
\ No newline at end of file
Index: app/src/main/res/layout/activity_question_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".QuestionDetailActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <!-- 상단 tool bar 역할 -->\r\n        <RelativeLayout\r\n            android:id=\"@+id/actionbarRl\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"#FFF1E0\"\r\n            android:paddingLeft=\"21.3dp\"\r\n            android:paddingTop=\"50px\"\r\n            android:paddingRight=\"21.3dp\"\r\n            android:paddingBottom=\"50px\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/backIv\"\r\n                android:layout_width=\"28px\"\r\n                android:layout_height=\"56px\"\r\n                android:src=\"@drawable/ic_back_black\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/categoryNameTv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:text=\"앱\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"41.78px\" />\r\n\r\n        </RelativeLayout>\r\n\r\n        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n            android:id=\"@+id/refreshLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.core.widget.NestedScrollView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:paddingStart=\"21.3dp\"\r\n                    android:paddingEnd=\"21.3dp\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/profileIv\"\r\n                        android:layout_width=\"26.18dp\"\r\n                        android:layout_height=\"26.18dp\"\r\n                        android:layout_marginTop=\"15.66dp\"\r\n                        android:src=\"@drawable/ic_profile\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/nickNameTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"10dp\"\r\n                        android:text=\"이휘정\"\r\n                        android:textColor=\"@color/home_gray_text_color\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/profileIv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/profileIv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/profileIv\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/dotIv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"8dp\"\r\n                        android:src=\"@drawable/ic_dot\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/nickNameTv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/nickNameTv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/nickNameTv\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/createdAtTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"8dp\"\r\n                        android:text=\"12/30,20\"\r\n                        android:textColor=\"@color/home_gray_text_color\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/dotIv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/dotIv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/dotIv\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/questionIv\"\r\n                        android:layout_width=\"75dp\"\r\n                        android:layout_height=\"21dp\"\r\n                        android:layout_marginStart=\"10dp\"\r\n                        android:src=\"@drawable/coding_question_check_img\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/createdAtTv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/createdAtTv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/createdAtTv\" />\r\n                    <ImageView\r\n                        android:id=\"@+id/clickLikeIv\"\r\n                        android:src=\"@drawable/ic_like\"\r\n                        android:layout_width=\"20dp\"\r\n                        android:layout_height=\"20dp\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/questionIv\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/questionIv\"/>\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/titleTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"12dp\"\r\n                        android:ellipsize=\"end\"\r\n                        android:lines=\"1\"\r\n                        android:text=\"함수 호출 부분을 모르겠어요!\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/profileIv\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/bigCategoryTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"10dp\"\r\n                        android:text=\"#앱\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/titleTv\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/smallCategoryTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"10dp\"\r\n                        android:layout_marginTop=\"10dp\"\r\n                        android:text=\"#안드로이드\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/bigCategoryTv\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/titleTv\" />\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/pictureLinearLayout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"17dp\"\r\n                        android:orientation=\"vertical\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/bigCategoryTv\">\r\n\r\n                        <androidx.viewpager2.widget.ViewPager2\r\n                            android:id=\"@+id/viewPager\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"200dp\"\r\n                            />\r\n\r\n                        <me.relex.circleindicator.CircleIndicator3\r\n                            app:ci_drawable=\"@drawable/indicator_background\"\r\n                            android:id=\"@+id/indicator\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"30dp\" />\r\n                    </LinearLayout>\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/currentErrorTv\"\r\n                        android:textSize=\"18sp\"\r\n                        android:layout_marginTop=\"7dp\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/pictureLinearLayout\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        android:layout_marginBottom=\"30dp\"\r\n                        android:text=\"메인에서 어떤 파라미터를 넘겨주었는데 이게 어떤식으로 동작되는 것이죠?\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:textColor=\"@color/black\"/>\r\n                    <LinearLayout\r\n                        android:id=\"@+id/codingSkillLinearLayout\"\r\n                        android:layout_marginTop=\"35dp\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/currentErrorTv\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        android:orientation=\"vertical\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n                        <androidx.constraintlayout.widget.ConstraintLayout\r\n                            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                            android:id=\"@+id/codingSkillConstraintLayout\"\r\n                            android:layout_marginBottom=\"20dp\"\r\n                            android:padding=\"10dp\"\r\n                            android:background=\"@drawable/button_customnext\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\">\r\n                            <TextView\r\n                                android:id=\"@+id/exclaMarkTv\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                android:textSize=\"12sp\"\r\n                                android:textColor=\"#FF5722\"\r\n                                android:text=\"!\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"/>\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/skillTv\"\r\n                                app:layout_constraintStart_toEndOf=\"@+id/exclaMarkTv\"\r\n                                app:layout_constraintTop_toTopOf=\"parent\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"5dp\"\r\n                                android:text=\"현재 코딩 실력\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:textSize=\"12sp\" />\r\n                            <TextView\r\n                                android:id=\"@+id/myCodingSkillTv\"\r\n                                app:layout_constraintTop_toBottomOf=\"@+id/skillTv\"\r\n                                app:layout_constraintStart_toStartOf=\"parent\"\r\n                                android:textColor=\"@color/black\"\r\n                                android:layout_marginTop=\"7dp\"\r\n                                android:text=\"저는 자바로 프로그래밍은 해봤지만.. 스프링 부트는 처음이에요..\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:textSize=\"12sp\"/>\r\n\r\n                        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                        <View\r\n                            app:layout_constraintStart_toStartOf=\"parent\"\r\n                            app:layout_constraintEnd_toEndOf=\"parent\"\r\n                            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"1dp\"\r\n                            android:background=\"@color/home_gray_text_color\"/>\r\n                    </LinearLayout>\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/smileTv\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@id/codingSkillLinearLayout\"\r\n                        android:layout_width=\"24dp\"\r\n                        android:layout_height=\"24dp\"\r\n                        android:src=\"@drawable/ic_answer_face\"\r\n                        android:layout_marginTop=\"14dp\"/>\r\n\r\n                    <TextView\r\n                        android:layout_marginStart=\"10dp\"\r\n                        app:layout_constraintTop_toTopOf=\"@id/smileTv\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/smileTv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/smileTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"답변\"/>\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/recyclerView\"\r\n                        tools:listitem=\"@layout/question_answer_item\"\r\n                        android:layout_marginTop=\"15dp\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@id/smileTv\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"/>\r\n\r\n\r\n\r\n\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            </androidx.core.widget.NestedScrollView>\r\n        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n    </LinearLayout>\r\n\r\n\r\n    <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton\r\n        android:id=\"@+id/questionFloatingButton\"\r\n        android:text=\"답변하기\"\r\n        android:layout_gravity=\"bottom|center\"\r\n        android:textColor=\"@color/white\"\r\n        android:backgroundTint=\"#FFBD80\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:iconTint=\"#FF8514\"\r\n        app:iconSize=\"25dp\"\r\n        app:icon=\"@drawable/ic_answer_face\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:layout_margin=\"20dp\"\r\n        android:layout_marginBottom=\"10dp\"/>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_question_detail.xml b/app/src/main/res/layout/activity_question_detail.xml
--- a/app/src/main/res/layout/activity_question_detail.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/res/layout/activity_question_detail.xml	(date 1644762680010)
@@ -4,7 +4,7 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".QuestionDetailActivity">
+    tools:context=".detailquestion.QuestionDetailActivity">
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/com/example/mumulcom/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mumulcom\r\n\r\nimport android.content.ContentValues.TAG\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.ImageView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.bumptech.glide.Glide\r\nimport com.example.mumulcom.databinding.ActivityMainBinding\r\nimport com.kakao.sdk.user.UserApiClient\r\n\r\n// TODO 하단 프로필 사진 연동하기 -> 바텀 네비에 서버에서 받은 값이 들어갈 수 있는가...?\r\nclass MainActivity : AppCompatActivity(), LoginView {\r\n    lateinit var binding: ActivityMainBinding\r\n\r\n    private var email: String = \"\"\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        // 카카오에서 사용자 email 받아오기\r\n        //getUserInfo()\r\n        // 사용자 정보 요청\r\n        UserApiClient.instance.me { kakaoUser, error ->\r\n            if (error != null) {\r\n                Log.e(TAG, \"사용자 정보 요청 실패\", error)\r\n            }\r\n            else if (kakaoUser != null) {\r\n                email = kakaoUser.kakaoAccount?.email.toString()\r\n                Log.i(TAG, \"사용자 정보 요청 성공 - 이메일: $email\")\r\n                // 로그인\r\n                Log.d(TAG, \"login 함수 실행\")\r\n                login(email)\r\n            }\r\n        }\r\n\r\n        initNavigation()\r\n\r\n        binding.mainBnv.setOnItemSelectedListener {\r\n            when (it.itemId) {\r\n                R.id.homeFragment -> {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.main_frm, HomeFragment())\r\n                        .commitAllowingStateLoss()\r\n                    return@setOnItemSelectedListener true\r\n                }\r\n\r\n                R.id.scrapFragment -> {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.main_frm, ScrapFragment())\r\n                        .commitAllowingStateLoss()\r\n                    return@setOnItemSelectedListener true\r\n                }\r\n\r\n                R.id.questionFragment -> {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.main_frm, QuestionFragment())\r\n                        .commitAllowingStateLoss()\r\n                    return@setOnItemSelectedListener true\r\n                }\r\n\r\n                R.id.alarmFragment -> {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.main_frm, AlarmFragment())\r\n                        .commitAllowingStateLoss()\r\n                    return@setOnItemSelectedListener true\r\n                }\r\n\r\n                R.id.profileFragment -> {\r\n                    supportFragmentManager.beginTransaction()\r\n                        .replace(R.id.main_frm, ProfileFragment())\r\n                        .commitAllowingStateLoss()\r\n                    return@setOnItemSelectedListener true\r\n                }\r\n\r\n            }\r\n            false\r\n        }\r\n    }\r\n\r\n    private fun initNavigation() {\r\n        supportFragmentManager.beginTransaction().replace(R.id.main_frm, HomeFragment())\r\n            .commitAllowingStateLoss()\r\n    }\r\n\r\n    private fun login(email: String) {\r\n        val login = Login(email)\r\n\r\n        val loginService = LoginService()\r\n        loginService.setLoginView(this)\r\n        loginService.login(login)\r\n    }\r\n\r\n    override fun onLoginLoading() {\r\n        binding.mainLoginLoadingPb.visibility = View.VISIBLE\r\n        Log.d(\"Login/API\",\"로그인 로딩 중...\")\r\n    }\r\n\r\n    override fun onLoginSuccess(auth: Auth) {\r\n        binding.mainLoginLoadingPb.visibility = View.GONE\r\n\r\n        if (auth != null) {\r\n            saveJwt(this, auth.jwt)\r\n            saveUserIdx(this, auth.userIdx)\r\n\r\n            Log.d(\"jwt\", auth.jwt)\r\n            Log.d(\"userIdx\", auth.userIdx.toString())\r\n        }\r\n    }\r\n\r\n    override fun onLoginFailure(code: Int, message: String) {\r\n        binding.mainLoginLoadingPb.visibility = View.GONE\r\n\r\n        when(code) {\r\n            3014 -> {   // DB에 없는 이메일일 경우\r\n                Log.d(\"SingUpCategoryActivity/API\", message)\r\n            }\r\n            400 -> {\r\n                Log.d(\"SingUpCategoryActivity/API\", message)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/MainActivity.kt b/app/src/main/java/com/example/mumulcom/MainActivity.kt
--- a/app/src/main/java/com/example/mumulcom/MainActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/java/com/example/mumulcom/MainActivity.kt	(date 1644762724924)
@@ -1,42 +1,23 @@
 package com.example.mumulcom
 
-import android.content.ContentValues.TAG
 import android.os.Bundle
-import android.util.Log
-import android.view.View
-import android.widget.ImageView
 import androidx.appcompat.app.AppCompatActivity
-import com.bumptech.glide.Glide
+import com.example.mumulcom.alarm.AlarmFragment
 import com.example.mumulcom.databinding.ActivityMainBinding
-import com.kakao.sdk.user.UserApiClient
+import com.example.mumulcom.home.HomeFragment
+import com.example.mumulcom.myquestion.QuestionFragment
+import com.example.mumulcom.profile.ProfileFragment
+import com.example.mumulcom.scrap.ScrapFragment
 
-// TODO 하단 프로필 사진 연동하기 -> 바텀 네비에 서버에서 받은 값이 들어갈 수 있는가...?
-class MainActivity : AppCompatActivity(), LoginView {
+// TODO 하단 프로필 사진 연동하기 -> 바텀 네비에 spf에 저장된 값이 들어가나..?
+class MainActivity : AppCompatActivity() {
     lateinit var binding: ActivityMainBinding
 
-    private var email: String = ""
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         binding = ActivityMainBinding.inflate(layoutInflater)
         setContentView(binding.root)
 
-        // 카카오에서 사용자 email 받아오기
-        //getUserInfo()
-        // 사용자 정보 요청
-        UserApiClient.instance.me { kakaoUser, error ->
-            if (error != null) {
-                Log.e(TAG, "사용자 정보 요청 실패", error)
-            }
-            else if (kakaoUser != null) {
-                email = kakaoUser.kakaoAccount?.email.toString()
-                Log.i(TAG, "사용자 정보 요청 성공 - 이메일: $email")
-                // 로그인
-                Log.d(TAG, "login 함수 실행")
-                login(email)
-            }
-        }
-
         initNavigation()
 
         binding.mainBnv.setOnItemSelectedListener {
@@ -86,43 +67,5 @@
             .commitAllowingStateLoss()
     }
 
-    private fun login(email: String) {
-        val login = Login(email)
-
-        val loginService = LoginService()
-        loginService.setLoginView(this)
-        loginService.login(login)
-    }
-
-    override fun onLoginLoading() {
-        binding.mainLoginLoadingPb.visibility = View.VISIBLE
-        Log.d("Login/API","로그인 로딩 중...")
-    }
-
-    override fun onLoginSuccess(auth: Auth) {
-        binding.mainLoginLoadingPb.visibility = View.GONE
-
-        if (auth != null) {
-            saveJwt(this, auth.jwt)
-            saveUserIdx(this, auth.userIdx)
-
-            Log.d("jwt", auth.jwt)
-            Log.d("userIdx", auth.userIdx.toString())
-        }
-    }
-
-    override fun onLoginFailure(code: Int, message: String) {
-        binding.mainLoginLoadingPb.visibility = View.GONE
-
-        when(code) {
-            3014 -> {   // DB에 없는 이메일일 경우
-                Log.d("SingUpCategoryActivity/API", message)
-            }
-            400 -> {
-                Log.d("SingUpCategoryActivity/API", message)
-            }
-        }
-    }
-
 }
 
Index: app/src/main/res/layout/activity_question_board.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        tools:context=\".QuestionBoardActivity\">\r\n\r\n        <!-- 상단 tool bar 역할 -->\r\n        <RelativeLayout\r\n            android:id=\"@+id/actionbarRl\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"#FFF1E0\"\r\n            android:paddingLeft=\"68px\"\r\n            android:paddingTop=\"50px\"\r\n            android:paddingRight=\"68px\"\r\n            android:paddingBottom=\"50px\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/backIv\"\r\n                android:layout_width=\"28px\"\r\n                android:layout_height=\"56px\"\r\n                android:src=\"@drawable/ic_back_black\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/categoryNameTv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:text=\"안드로이드\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"41.78px\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/searchIv\"\r\n                android:layout_width=\"71px\"\r\n                android:layout_height=\"71px\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:src=\"@drawable/ic_search\" />\r\n        </RelativeLayout>\r\n\r\n\r\n        <!-- ScrollView -->\r\n\r\n        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n            android:id=\"@+id/refreshLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.core.widget.NestedScrollView\r\n                android:id=\"@+id/questionBoardSv\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <androidx.constraintlayout.widget.ConstraintLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:paddingStart=\"68px\"\r\n                    android:paddingEnd=\"68px\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/codingQuestionIv\"\r\n                        android:layout_width=\"319px\"\r\n                        android:layout_height=\"89.32px\"\r\n                        android:layout_marginTop=\"81px\"\r\n                        android:src=\"@drawable/coding_question_img\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/conceptQuestionIv\"\r\n                        android:layout_width=\"319px\"\r\n                        android:layout_height=\"89.32px\"\r\n                        android:layout_marginStart=\"49.86px\"\r\n                        android:src=\"@drawable/ic_concept_question_img\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/codingQuestionIv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/codingQuestionIv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/codingQuestionIv\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/sortRecentTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"59px\"\r\n                        android:text=\"최신순\"\r\n                        android:textColor=\"#C4C4C4\"\r\n                        android:textSize=\"41.78px\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/codingQuestionIv\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/sortHotTv\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"41px\"\r\n                        android:text=\"핫한순\"\r\n                        android:textColor=\"#C4C4C4\"\r\n                        android:textSize=\"41.78px\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/sortRecentTv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/sortRecentTv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/sortRecentTv\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/ifAnswerIsCheckIv\"\r\n                        android:layout_width=\"50px\"\r\n                        android:layout_height=\"50px\"\r\n                        android:layout_marginStart=\"190px\"\r\n                        android:src=\"@drawable/ic_check_no\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/sortRecentTv\"\r\n                        app:layout_constraintStart_toEndOf=\"@+id/sortHotTv\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/sortRecentTv\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"답변 달린 질문만 보기\"\r\n                        android:textColor=\"#474A57\"\r\n                        android:textSize=\"41.78px\"\r\n                        app:layout_constraintBottom_toBottomOf=\"@+id/sortRecentTv\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        app:layout_constraintTop_toTopOf=\"@+id/sortRecentTv\" />\r\n\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/questionBoardRv\"\r\n                        android:layout_marginTop=\"40px\"\r\n                        tools:listitem=\"@layout/question_list_item\"\r\n                        app:layout_constraintTop_toBottomOf=\"@+id/sortRecentTv\"\r\n                        app:layout_constraintStart_toStartOf=\"parent\"\r\n                        app:layout_constraintEnd_toEndOf=\"parent\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"/>\r\n\r\n\r\n                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n\r\n            </androidx.core.widget.NestedScrollView>\r\n\r\n        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton\r\n        android:id=\"@+id/questionFloatingButton\"\r\n        android:text=\"질문하기\"\r\n        android:layout_gravity=\"bottom|center\"\r\n        android:textColor=\"@color/white\"\r\n        android:backgroundTint=\"#FFBD80\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:iconTint=\"#FF8514\"\r\n        app:iconSize=\"25dp\"\r\n        app:icon=\"@drawable/ic_question_face\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        android:layout_margin=\"20dp\"\r\n        android:layout_marginBottom=\"10dp\"/>\r\n\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_question_board.xml b/app/src/main/res/layout/activity_question_board.xml
--- a/app/src/main/res/layout/activity_question_board.xml	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/res/layout/activity_question_board.xml	(date 1644762678756)
@@ -11,7 +11,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:orientation="vertical"
-        tools:context=".QuestionBoardActivity">
+        tools:context=".category.QuestionBoardActivity">
 
         <!-- 상단 tool bar 역할 -->
         <RelativeLayout
Index: app/src/main/java/com/example/mumulcom/QuestionCategoryActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mumulcom\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.mumulcom.databinding.ActivityQuestioncategoryBinding\r\n\r\n\r\nclass QuestionCategoryActivity : AppCompatActivity() {\r\n\r\n    lateinit var binding: ActivityQuestioncategoryBinding\r\n\r\n    private var codingQuestionCheck : Boolean = false // default 값\r\n    private var conceptQuestionCheck : Boolean = false // default 값\r\n    private var isSelect: Boolean=false // default 값\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityQuestioncategoryBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n\r\n        setSelectCompletion()//선택완료버튼\r\n        initView()  // view 초기화\r\n        initCodingOrConceptQuestionButton() // 코딩 질문 & 개념 질문 버튼 초기화\r\n\r\n    }\r\n\r\n    private fun initView(){\r\n\r\n        if (codingQuestionCheck==false&&conceptQuestionCheck==false){\r\n            isSelect=false\r\n            setSelectCompletion()\r\n            binding.questioncategorySelectCompletionIb.setOnClickListener {\r\n                Toast.makeText(this@QuestionCategoryActivity, \"질문 유형을 선택해주세요\", Toast.LENGTH_SHORT)\r\n                    .show()\r\n            }\r\n        }\r\n\r\n        // 코딩 질문 버튼\r\n        binding.questioncategoryCodingQuestionIb.setOnClickListener {\r\n            codingQuestionCheck = true\r\n            conceptQuestionCheck = false\r\n            initCodingOrConceptQuestionButton()\r\n            isSelect=true\r\n            setSelectCompletion()\r\n            binding.questioncategorySelectCompletionIb.setOnClickListener {\r\n                startActivity(Intent(this, CheckCodingQuestionActivity::class.java))\r\n            }\r\n        }\r\n\r\n\r\n        // 개념 질문 버튼\r\n        binding.questioncategoryConceptQuestionIb.setOnClickListener {\r\n            conceptQuestionCheck= true\r\n            codingQuestionCheck = false\r\n            isSelect=true\r\n            initCodingOrConceptQuestionButton()\r\n            setSelectCompletion()\r\n            binding.questioncategorySelectCompletionIb.setOnClickListener {\r\n                startActivity(Intent(this, CheckConceptQuestionActivity::class.java))\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fun setSelectCompletion(){\r\n        if(isSelect){\r\n            binding.questioncategorySelectCompletionIb.setImageResource(R.drawable.ic_select_complete)\r\n//            binding.questioncategorySelectCompletionIb.setOnClickListener {\r\n//                startActivity(Intent(this, CheckCodingQuestionActivity::class.java))\r\n//            }\r\n        }else{\r\n            binding.questioncategorySelectCompletionIb.setImageResource(R.drawable.ic_bf_selectcompletion)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    fun initCodingOrConceptQuestionButton(){\r\n        if(codingQuestionCheck){\r\n            binding.questioncategoryCodingQuestionIb.setImageResource(R.drawable.coding_question_check_img)\r\n            binding.questioncategoryCodingQuestionIb.isEnabled = false // 이미 선택되었으면 선택 못함.\r\n            // 코딩 질문만 보여줌\r\n        }else{\r\n            binding.questioncategoryCodingQuestionIb.setImageResource(R.drawable.coding_question_img)\r\n            binding.questioncategoryCodingQuestionIb.isEnabled = true\r\n        }\r\n\r\n        if(conceptQuestionCheck){\r\n            binding.questioncategoryConceptQuestionIb.setImageResource(R.drawable.ic_concept_question_check_img)\r\n            binding.questioncategoryConceptQuestionIb.isEnabled = false // 이미 선택되었으면 선택 못함.\r\n            // 개념 질문만 보여줌\r\n\r\n        }else{\r\n            binding.questioncategoryConceptQuestionIb.setImageResource(R.drawable.ic_concept_question_img)\r\n            binding.questioncategoryConceptQuestionIb.isEnabled = true\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mumulcom/QuestionCategoryActivity.kt b/app/src/main/java/com/example/mumulcom/QuestionCategoryActivity.kt
--- a/app/src/main/java/com/example/mumulcom/QuestionCategoryActivity.kt	(revision 3af70910988eb25a2a4fffc6480b5867b0a53ac3)
+++ b/app/src/main/java/com/example/mumulcom/QuestionCategoryActivity.kt	(date 1644762724912)
@@ -4,6 +4,8 @@
 import android.os.Bundle
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
+import com.example.mumulcom.codingquestion.CheckCodingQuestionActivity
+import com.example.mumulcom.conceptquestion.CheckConceptQuestionActivity
 import com.example.mumulcom.databinding.ActivityQuestioncategoryBinding
 
 
@@ -32,33 +34,33 @@
         if (codingQuestionCheck==false&&conceptQuestionCheck==false){
             isSelect=false
             setSelectCompletion()
-            binding.questioncategorySelectCompletionIb.setOnClickListener {
+            binding.questioncategorySelectCompletionIv.setOnClickListener {
                 Toast.makeText(this@QuestionCategoryActivity, "질문 유형을 선택해주세요", Toast.LENGTH_SHORT)
                     .show()
             }
         }
 
         // 코딩 질문 버튼
-        binding.questioncategoryCodingQuestionIb.setOnClickListener {
+        binding.questioncategoryCodingQuestionIv.setOnClickListener {
             codingQuestionCheck = true
             conceptQuestionCheck = false
             initCodingOrConceptQuestionButton()
             isSelect=true
             setSelectCompletion()
-            binding.questioncategorySelectCompletionIb.setOnClickListener {
+            binding.questioncategorySelectCompletionIv.setOnClickListener {
                 startActivity(Intent(this, CheckCodingQuestionActivity::class.java))
             }
         }
 
 
         // 개념 질문 버튼
-        binding.questioncategoryConceptQuestionIb.setOnClickListener {
+        binding.questioncategoryConceptQuestionIv.setOnClickListener {
             conceptQuestionCheck= true
             codingQuestionCheck = false
             isSelect=true
             initCodingOrConceptQuestionButton()
             setSelectCompletion()
-            binding.questioncategorySelectCompletionIb.setOnClickListener {
+            binding.questioncategorySelectCompletionIv.setOnClickListener {
                 startActivity(Intent(this, CheckConceptQuestionActivity::class.java))
             }
         }
@@ -67,12 +69,12 @@
 
     fun setSelectCompletion(){
         if(isSelect){
-            binding.questioncategorySelectCompletionIb.setImageResource(R.drawable.ic_select_complete)
+            binding.questioncategorySelectCompletionIv.setImageResource(R.drawable.ic_select_complete)
 //            binding.questioncategorySelectCompletionIb.setOnClickListener {
 //                startActivity(Intent(this, CheckCodingQuestionActivity::class.java))
 //            }
         }else{
-            binding.questioncategorySelectCompletionIb.setImageResource(R.drawable.ic_bf_selectcompletion)
+            binding.questioncategorySelectCompletionIv.setImageResource(R.drawable.ic_bf_selectcompletion)
         }
     }
 
@@ -81,22 +83,22 @@
 
     fun initCodingOrConceptQuestionButton(){
         if(codingQuestionCheck){
-            binding.questioncategoryCodingQuestionIb.setImageResource(R.drawable.coding_question_check_img)
-            binding.questioncategoryCodingQuestionIb.isEnabled = false // 이미 선택되었으면 선택 못함.
+            binding.questioncategoryCodingQuestionIv.setImageResource(R.drawable.coding_question_check_img)
+            binding.questioncategoryCodingQuestionIv.isEnabled = false // 이미 선택되었으면 선택 못함.
             // 코딩 질문만 보여줌
         }else{
-            binding.questioncategoryCodingQuestionIb.setImageResource(R.drawable.coding_question_img)
-            binding.questioncategoryCodingQuestionIb.isEnabled = true
+            binding.questioncategoryCodingQuestionIv.setImageResource(R.drawable.coding_question_img)
+            binding.questioncategoryCodingQuestionIv.isEnabled = true
         }
 
         if(conceptQuestionCheck){
-            binding.questioncategoryConceptQuestionIb.setImageResource(R.drawable.ic_concept_question_check_img)
-            binding.questioncategoryConceptQuestionIb.isEnabled = false // 이미 선택되었으면 선택 못함.
+            binding.questioncategoryConceptQuestionIv.setImageResource(R.drawable.ic_concept_question_check_img)
+            binding.questioncategoryConceptQuestionIv.isEnabled = false // 이미 선택되었으면 선택 못함.
             // 개념 질문만 보여줌
 
         }else{
-            binding.questioncategoryConceptQuestionIb.setImageResource(R.drawable.ic_concept_question_img)
-            binding.questioncategoryConceptQuestionIb.isEnabled = true
+            binding.questioncategoryConceptQuestionIv.setImageResource(R.drawable.ic_concept_question_img)
+            binding.questioncategoryConceptQuestionIv.isEnabled = true
         }
     }
 }
\ No newline at end of file
